{"version":3,"sources":["webpack:///component---src-pages-des-js-59e43be04766b0e27dc7.js","webpack:///./src/pages/des.js"],"names":["webpackJsonp","182","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_react","_react2","Box","_Component","this","_this","uuid","Math","random","toString","state","glowing","componentDidMount","nv","addEventListener","handleClick","bind","componentWillUnmount","removeEventListener","setState","o","render","_this2","rectStyle","fill","stroke","strokeWidth","rectShadowStyle","textWrapStyle","display","width","height","textStyle","textAlign","verticalAlign","props","largetext","fontSize","smalltext","noshape","fillOpacity","undefined","window","MathJax","Hub","Queue","createElement","ref","elem","shadow","x","y","w","h","style","xmlns","id","children","Component","DES","_Component2","_this3","key","plaintext","PC1","keyrotations","PC2","IP","E","Sbox","Pbox","updateState","t","document","getElementById","st","JSON","parse","stringify","match","updateArray","idx","parseInt","updateSbox","which","outeridx","inneridx","updateSboxZero","i","j","makeIPIdentity","makePboxIdentity","swapIPandInvIP","InvIP","runDES","computed","hex2bin","str","length","v","substr","bin2hex","subKeyDisplay","v1","v2","permute","text","P","circularShiftL","Xor","console","warn","F","round","R","K","beforeS","afterS","outer","inner","outerIdx","innerIdx","SboxAccessHistory","floor","IPed","results","L","push","C","D","times","subKey","tmp","InvIPed","legalize","hexstr","DESresults","L1","R1","C1","D1","C1Shift","D1Shift","X","L2","R2","C2","D2","KPC2","pathStyle","markerEnd","pathStyleNoEnd","gp","rect","p","segs","from","ret","args","Array","slice","arguments","lst","map","l","join","sw","r1","r2","min","max","md","p1","p2","off","dx","dy","pt","textOnL1","d","textOnR1","textOnC1","textOnD1","Finput","XOR2","Foutput","FP","FK","Fexpand","SBoxes","IPTable","row","tid","fontFamily","border","maxWidth","padding","onChange","position","colSpan","onClick","lineHeight","whiteSpace","top","right","backgroundColor","appeared","InvIPTable","flag","disabled","color","SBoxTable","z","subtable","rowSpan","left","stid","hasAccessed","PBoxTable","PC1Table","PC2Table","ActualExample","thStyle","tdStyle","log","markerWidth","markerHeight","refX","refY","orient","markerUnits"],"mappings":"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","file":"component---src-pages-des-js-59e43be04766b0e27dc7.js","sourcesContent":["webpackJsonp([244909671179150],{\n\n/***/ 182:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Box = function (_Component) {\n\t    _inherits(Box, _Component);\n\t\n\t    function Box() {\n\t        _classCallCheck(this, Box);\n\t\n\t        var _this = _possibleConstructorReturn(this, _Component.call(this));\n\t\n\t        _this.uuid = Math.random().toString(36);\n\t        _this.state = {\n\t            glowing: false\n\t        };\n\t        return _this;\n\t    }\n\t\n\t    Box.prototype.componentDidMount = function componentDidMount() {\n\t        this.nv.addEventListener('click', this.handleClick.bind(this));\n\t    };\n\t\n\t    Box.prototype.componentWillUnmount = function componentWillUnmount() {\n\t        this.nv.removeEventListener('click', this.handleClick.bind(this));\n\t    };\n\t\n\t    Box.prototype.handleClick = function handleClick() {\n\t        this.setState(function (o) {\n\t            return { glowing: !o.glowing };\n\t        });\n\t    };\n\t\n\t    Box.prototype.render = function render() {\n\t        var _this2 = this;\n\t\n\t        var rectStyle = {\n\t            fill: this.state.glowing ? 'gold' : '#DDD',\n\t            stroke: '#555',\n\t            strokeWidth: '2px'\n\t        };\n\t        var rectShadowStyle = {\n\t            fill: '#777'\n\t        };\n\t        var textWrapStyle = { display: 'table', width: '100%', height: '100%' };\n\t        var textStyle = { display: 'table-cell', textAlign: 'center', verticalAlign: 'middle' };\n\t\n\t        if (this.props.largetext) {\n\t            textStyle.fontSize = '200%';\n\t        }\n\t        if (this.props.smalltext) {\n\t            textStyle.fontSize = '70%';\n\t        }\n\t\n\t        if (this.props.noshape) {\n\t            rectStyle.fillOpacity = '0.0';\n\t            rectStyle.stroke = undefined;\n\t            rectStyle.strokeWidth = undefined;\n\t        }\n\t\n\t        if (window.MathJax !== undefined) {\n\t            window.MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, \"math-\" + this.uuid]);\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t            'g',\n\t            { ref: function ref(elem) {\n\t                    return _this2.nv = elem;\n\t                } },\n\t            this.props.shadow && _react2.default.createElement('rect', { x: this.props.x + 5, y: this.props.y + 5, width: this.props.w, height: this.props.h, style: rectShadowStyle }),\n\t            _react2.default.createElement('rect', { x: this.props.x, y: this.props.y, width: this.props.w, height: this.props.h, style: rectStyle }),\n\t            _react2.default.createElement(\n\t                'foreignObject',\n\t                { x: this.props.x, y: this.props.y, width: this.props.w, height: this.props.h },\n\t                _react2.default.createElement(\n\t                    'div',\n\t                    { xmlns: 'http://www.w3.org/1999/xhtml', style: textWrapStyle },\n\t                    _react2.default.createElement(\n\t                        'p',\n\t                        { id: \"math-\" + this.uuid, style: textStyle },\n\t                        this.props.children\n\t                    )\n\t                )\n\t            )\n\t        );\n\t    };\n\t\n\t    return Box;\n\t}(_react.Component);\n\t//<text x={this.props.x + this.props.w/2} y={this.props.y+this.props.h/2} dominantBaseline=\"central\" textAnchor=\"middle\">{this.props.children}</text>\n\t\n\tvar DES = function (_Component2) {\n\t    _inherits(DES, _Component2);\n\t\n\t    function DES() {\n\t        _classCallCheck(this, DES);\n\t\n\t        var _this3 = _possibleConstructorReturn(this, _Component2.call(this));\n\t\n\t        _this3.state = {\n\t            key: \"0f1571c947d9e859\",\n\t            plaintext: \"02468aceeca86420\",\n\t\n\t            // key schedule tables\n\t            PC1: [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4],\n\t            keyrotations: [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1],\n\t\n\t            PC2: [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32],\n\t\n\t            // permutation tables\n\t            IP: [58, 50, 42, 34, 26, 18, 10, 2, 60, 52, 44, 36, 28, 20, 12, 4, 62, 54, 46, 38, 30, 22, 14, 6, 64, 56, 48, 40, 32, 24, 16, 8, 57, 49, 41, 33, 25, 17, 9, 1, 59, 51, 43, 35, 27, 19, 11, 3, 61, 53, 45, 37, 29, 21, 13, 5, 63, 55, 47, 39, 31, 23, 15, 7],\n\t\n\t            // F function tables\n\t            E: [32, 1, 2, 3, 4, 5, 4, 5, 6, 7, 8, 9, 8, 9, 10, 11, 12, 13, 12, 13, 14, 15, 16, 17, 16, 17, 18, 19, 20, 21, 20, 21, 22, 23, 24, 25, 24, 25, 26, 27, 28, 29, 28, 29, 30, 31, 32, 1],\n\t\n\t            Sbox: [[[14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7], [0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8], [4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0], [15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13]], [[15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10], [3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5], [0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15], [13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9]], [[10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8], [13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1], [13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7], [1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12]], [[7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15], [13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9], [10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4], [3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14]], [[2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9], [14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6], [4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14], [11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3]], [[12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11], [10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8], [9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6], [4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13]], [[4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1], [13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6], [1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2], [6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12]], [[13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7], [1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2], [7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8], [2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11]]],\n\t            Pbox: [16, 7, 20, 21, 29, 12, 28, 17, 1, 15, 23, 26, 5, 18, 31, 10, 2, 8, 24, 14, 32, 27, 3, 9, 19, 13, 30, 6, 22, 11, 4, 25]\n\t\n\t        };\n\t        return _this3;\n\t    }\n\t\n\t    DES.prototype.updateState = function updateState(key, id) {\n\t        var t = document.getElementById(id).value;\n\t        var st = JSON.parse(JSON.stringify(this.state));\n\t        st[key] = t;\n\t        if (t.match(/[^A-Fa-f0-9]/) === null) {\n\t            this.setState(st);\n\t        }\n\t    };\n\t\n\t    DES.prototype.updateArray = function updateArray(key, id, idx) {\n\t        var t = parseInt(document.getElementById(id).value) || 0;\n\t        var st = JSON.parse(JSON.stringify(this.state));\n\t        st[key][idx] = t;\n\t        this.setState(st);\n\t    };\n\t\n\t    DES.prototype.updateSbox = function updateSbox(key, id, which, outeridx, inneridx) {\n\t        var t = parseInt(document.getElementById(id).value) || 0;\n\t        var st = JSON.parse(JSON.stringify(this.state));\n\t        st[key][which][outeridx][inneridx] = t;\n\t        this.setState(st);\n\t    };\n\t\n\t    DES.prototype.updateSboxZero = function updateSboxZero(which) {\n\t        var st = JSON.parse(JSON.stringify(this.state));\n\t        for (var i = 0; i < 4; i += 1) {\n\t            for (var j = 0; j < 16; j += 1) {\n\t                st['Sbox'][which][i][j] = 0;\n\t            }\n\t        }this.setState(st);\n\t    };\n\t\n\t    DES.prototype.makeIPIdentity = function makeIPIdentity() {\n\t        var st = JSON.parse(JSON.stringify(this.state));\n\t        for (var i = 0; i < 64; i++) {\n\t            st.IP[i] = i + 1;\n\t        }this.setState(st);\n\t    };\n\t\n\t    DES.prototype.makePboxIdentity = function makePboxIdentity() {\n\t        var st = JSON.parse(JSON.stringify(this.state));\n\t        for (var i = 0; i < 32; i++) {\n\t            st.Pbox[i] = i + 1;\n\t        }this.setState(st);\n\t    };\n\t\n\t    DES.prototype.swapIPandInvIP = function swapIPandInvIP(InvIP) {\n\t        var st = JSON.parse(JSON.stringify(this.state));\n\t        st.IP = InvIP;\n\t        this.setState(st);\n\t    };\n\t\n\t    DES.prototype.runDES = function runDES(computed) {\n\t        var hex2bin = function hex2bin(str) {\n\t            var t = \"\";\n\t            for (var i = 0; i < str.length; i++) {\n\t                var v = parseInt(str[i], 16).toString(2);\n\t                t += \"0000\".substr(v.length) + v;\n\t            }\n\t            return t;\n\t        };\n\t        var bin2hex = function bin2hex(str) {\n\t            var t = \"\";\n\t            for (var i = 0; i < str.length; i += 4) {\n\t                var v = parseInt(str.substr(i, 4), 2).toString(16);\n\t                t += v;\n\t            }\n\t            return t;\n\t        };\n\t        var subKeyDisplay = function subKeyDisplay(str) {\n\t            var t = \"\";\n\t            for (var i = 0; i < str.length; i += 6) {\n\t                var v1 = parseInt(str.substr(i, 2), 2).toString(16);\n\t                var v2 = parseInt(str.substr(i + 2, 4), 2).toString(16);\n\t                t += v1 + v2 + \" \";\n\t            }\n\t            return t;\n\t        };\n\t        var permute = function permute(text, P) {\n\t            var t = \"\";\n\t            for (var i = 0; i < P.length; i++) {\n\t                t += text[P[i] - 1];\n\t            }\n\t            return t;\n\t        };\n\t        var circularShiftL = function circularShiftL(str) {\n\t            return str.substr(1) + str[0];\n\t        };\n\t        var Xor = function Xor(x, y) {\n\t            if (x.length != y.length) console.warn(\"xor : length does not match!\");\n\t            var t = \"\";\n\t            for (var i = 0; i < x.length; i++) {\n\t                t += x[i] === y[i] ? \"0\" : \"1\";\n\t            }\n\t            return t;\n\t        };\n\t\n\t        var F = function (computed, round, R, K) {\n\t            var E = permute(R, this.state.E);\n\t            var beforeS = Xor(E, K);\n\t            var afterS = \"\";\n\t\n\t            for (var i = 0; i < beforeS.length; i += 6) {\n\t                var outer = beforeS[i] + beforeS[i + 5];\n\t                var inner = beforeS.substr(i + 1, 4);\n\t                var outerIdx = parseInt(outer, 2);\n\t                var innerIdx = parseInt(inner, 2);\n\t                var v = this.state.Sbox[i / 6][outerIdx][innerIdx].toString(2);\n\t\n\t                // logging use\n\t                computed.SboxAccessHistory[Math.floor(i / 6) * 64 + outerIdx * 16 + innerIdx] = round;\n\t\n\t                afterS += \"0000\".substr(v.length) + v;\n\t            }\n\t            return permute(afterS, this.state.Pbox);\n\t        }.bind(this, computed);\n\t\n\t        var plaintext = hex2bin(computed.plaintext);\n\t        var IPed = permute(plaintext, this.state.IP);\n\t\n\t        var results = [];\n\t        var L = IPed.substr(0, 32);\n\t        var R = IPed.substr(32, 32);\n\t        var key = hex2bin(computed.key);\n\t        var K = permute(key, this.state.PC1);\n\t        if (K.length != 56) console.warn(\"Incorrect key length!\");\n\t\n\t        results.push([\"IP\", \"\", bin2hex(L), bin2hex(R)]);\n\t        for (var i = 1; i <= 16; i++) {\n\t            // key generation\n\t            var C = K.substr(0, 28);\n\t            var D = K.substr(28, 28);\n\t            for (var times = 0; times < this.state.keyrotations[i - 1]; times += 1) {\n\t                C = circularShiftL(C);\n\t                D = circularShiftL(D);\n\t            }\n\t            K = C + D;\n\t            var subKey = permute(K, this.state.PC2);\n\t\n\t            var tmp = R;\n\t            R = Xor(F(i, R, subKey), L);\n\t            L = tmp;\n\t            results.push(['' + i, subKeyDisplay(subKey), bin2hex(L), bin2hex(R)]);\n\t        }\n\t        tmp = L;\n\t        L = R;\n\t        R = tmp;\n\t        results.push([\"Swap\", \"\", bin2hex(L), bin2hex(R)]);\n\t\n\t        var InvIPed = permute(L + R, computed.InvIP);\n\t        L = InvIPed.substr(0, 32);\n\t        R = InvIPed.substr(32, 32);\n\t        results.push([\"InvIP\", \"\", bin2hex(L), bin2hex(R)]);\n\t        return results;\n\t    };\n\t\n\t    DES.prototype.render = function render() {\n\t\n\t        var legalize = function legalize(hexstr) {\n\t            return \"0000000000000000\".substr(hexstr.length) + hexstr;\n\t        };\n\t\n\t        // ================ data generation ===================\n\t        var computed = {\n\t            InvIP: [40, 8, 48, 16, 56, 24, 64, 32, 39, 7, 47, 15, 55, 23, 63, 31, 38, 6, 46, 14, 54, 22, 62, 30, 37, 5, 45, 13, 53, 21, 61, 29, 36, 4, 44, 12, 52, 20, 60, 28, 35, 3, 43, 11, 51, 19, 59, 27, 34, 2, 42, 10, 50, 18, 58, 26, 33, 1, 41, 9, 49, 17, 57, 25],\n\t            SboxAccessHistory: {},\n\t            plaintext: legalize(this.state.plaintext),\n\t            key: legalize(this.state.key)\n\t        };\n\t\n\t        for (var i = 0; i < 64; i++) {\n\t            computed.InvIP[this.state.IP[i] - 1] = i + 1;\n\t        }\n\t\n\t        var DESresults = this.runDES(computed);\n\t\n\t        // ============== diagrams =========================\n\t\n\t\n\t        var L1 = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 50, y: 30, w: 150, h: 40 },\n\t            '$L_{i-1}$'\n\t        );\n\t        var R1 = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 240, y: 30, w: 150, h: 40 },\n\t            '$R_{i-1}$'\n\t        );\n\t        var C1 = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 500, y: 30, w: 150, h: 40 },\n\t            '$C_{i-1}$'\n\t        );\n\t        var D1 = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 690, y: 30, w: 150, h: 40 },\n\t            '$D_{i-1}$'\n\t        );\n\t\n\t        var C1Shift = _react2.default.createElement(\n\t            Box,\n\t            { smalltext: true, x: 500, y: 100, w: 150, h: 30 },\n\t            'Left Circular Shift[$i$]'\n\t        );\n\t        var D1Shift = _react2.default.createElement(\n\t            Box,\n\t            { smalltext: true, x: 690, y: 100, w: 150, h: 30 },\n\t            'Left Circular Shift[$i$]'\n\t        );\n\t\n\t        var F = _react2.default.createElement(\n\t            Box,\n\t            { x: 240 + 45, y: 170, w: 60, h: 60 },\n\t            '$F$'\n\t        );\n\t        var X = _react2.default.createElement(\n\t            Box,\n\t            { largetext: true, noshape: true, x: 240 + 45 + 10, y: (170 + 430) / 2 + 10, w: 60 - 20, h: 60 - 20 },\n\t            '$\\\\oplus$'\n\t        );\n\t\n\t        var L2 = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 50, y: 430, w: 150, h: 40 },\n\t            '$L_{i}$'\n\t        );\n\t        var R2 = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 240, y: 430, w: 150, h: 40 },\n\t            '$R_{i}$'\n\t        );\n\t        var C2 = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 500, y: 430, w: 150, h: 40 },\n\t            '$C_{i}$'\n\t        );\n\t        var D2 = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 690, y: 430, w: 150, h: 40 },\n\t            '$D_{i}$'\n\t        );\n\t\n\t        var K = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 460, y: 170, w: 60, h: 60 },\n\t            '$K_{i}$'\n\t        );\n\t        var KPC2 = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 580, y: 170, w: 60, h: 60 },\n\t            '$\\\\textrm{PC}_2$'\n\t        );\n\t\n\t        var pathStyle = {\n\t            markerEnd: \"url(#markerArrow)\",\n\t            stroke: \"#000\",\n\t            strokeWidth: \"1px\",\n\t            fill: 'none'\n\t        };\n\t        var pathStyleNoEnd = {\n\t            stroke: \"#000\",\n\t            strokeWidth: \"1px\",\n\t            fill: 'none'\n\t        };\n\t\n\t        var gp = function gp(rect, p) {\n\t            if (p === \"east\") {\n\t                return { x: rect.props.x + rect.props.w,\n\t                    y: rect.props.y + rect.props.h / 2 };\n\t            } else if (p === \"west\") {\n\t                return { x: rect.props.x,\n\t                    y: rect.props.y + rect.props.h / 2 };\n\t            } else if (p === \"north\") {\n\t                return { x: rect.props.x + rect.props.w / 2,\n\t                    y: rect.props.y };\n\t            } else if (p === \"south\") {\n\t                return { x: rect.props.x + rect.props.w / 2,\n\t                    y: rect.props.y + rect.props.h };\n\t            }\n\t        };\n\t        var segs = function segs(from) {\n\t\n\t            var x = from.x;\n\t            var y = from.y;\n\t            var ret = \"M\" + x + \",\" + y + \" \";\n\t\n\t            var args = Array.prototype.slice.call(arguments, 1);\n\t            var lst = args.map(function (p) {\n\t                return (p.l || \"L\") + p.x + \",\" + p.y;\n\t            });\n\t            ret += lst.join(\" \");\n\t\n\t            return ret;\n\t        };\n\t        // south-west\n\t        var sw = function sw(r1, r2) {\n\t            return { x: Math.min(r1.props.x + r1.props.w / 2, r2.props.x + r2.props.w / 2),\n\t                y: Math.max(r1.props.y + r1.props.h / 2, r2.props.y + r2.props.h / 2) };\n\t        };\n\t        // middle of two points\n\t        var md = function md(p1, p2) {\n\t            return { x: (p1.x + p2.x) / 2, y: (p1.y + p2.y) / 2 };\n\t        };\n\t        // offset\n\t        var off = function off(dx, dy) {\n\t            return { l: \"l\", x: dx, y: dy };\n\t        };\n\t        var pt = function pt(x, y) {\n\t            return { x: x, y: y };\n\t        };\n\t\n\t        var textOnL1 = _react2.default.createElement(\n\t            'g',\n\t            null,\n\t            _react2.default.createElement(\n\t                Box,\n\t                { smalltext: true, noshape: true, x: 50, y: 0, w: 150, h: 40 },\n\t                '$32$-bits'\n\t            ),\n\t            _react2.default.createElement('path', { style: pathStyle, d: segs(pt(100, 20), pt(50, 20)) }),\n\t            _react2.default.createElement('path', { style: pathStyle, d: segs(pt(150, 20), pt(200, 20)) })\n\t        );\n\t\n\t        var textOnR1 = _react2.default.createElement(\n\t            'g',\n\t            null,\n\t            _react2.default.createElement(\n\t                Box,\n\t                { smalltext: true, noshape: true, x: 240, y: 0, w: 150, h: 40 },\n\t                '$32$-bits'\n\t            ),\n\t            _react2.default.createElement('path', { style: pathStyle, d: segs(pt(290, 20), off(-50, 0)) }),\n\t            _react2.default.createElement('path', { style: pathStyle, d: segs(pt(340, 20), off(50, 0)) })\n\t        );\n\t        var textOnC1 = _react2.default.createElement(\n\t            'g',\n\t            null,\n\t            _react2.default.createElement(\n\t                Box,\n\t                { smalltext: true, noshape: true, x: gp(C1, \"west\").x, y: 0, w: 150, h: 40 },\n\t                '$28$-bits'\n\t            ),\n\t            _react2.default.createElement('path', { style: pathStyle, d: segs(pt(gp(C1, \"north\").x - 25, 20), off(-50, 0)) }),\n\t            _react2.default.createElement('path', { style: pathStyle, d: segs(pt(gp(C1, \"north\").x + 25, 20), off(50, 0)) })\n\t        );\n\t        var textOnD1 = _react2.default.createElement(\n\t            'g',\n\t            null,\n\t            _react2.default.createElement(\n\t                Box,\n\t                { smalltext: true, noshape: true, x: gp(D1, \"west\").x, y: 0, w: 150, h: 40 },\n\t                '$28$-bits'\n\t            ),\n\t            _react2.default.createElement('path', { style: pathStyle, d: segs(pt(gp(D1, \"north\").x - 25, 20), off(-50, 0)) }),\n\t            _react2.default.createElement('path', { style: pathStyle, d: segs(pt(gp(D1, \"north\").x + 25, 20), off(50, 0)) })\n\t        );\n\t\n\t        var Finput = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 50, y: 60, w: 300, h: 40 },\n\t            '$R_{i-1}$: $32$ bits'\n\t        );\n\t        var XOR2 = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 75, y: 260, w: 75 * 8 - 25, h: 30 },\n\t            'XOR $\\\\oplus$'\n\t        );\n\t        var Foutput = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 200, y: 540, w: 300, h: 40 },\n\t            'Output'\n\t        );\n\t        var FP = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 200, y: 460, w: 300, h: 40 },\n\t            'Permutation $P$'\n\t        );\n\t        var FK = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 460, y: 60, w: 400, h: 40 },\n\t            '$K_i$: $48$ bits'\n\t        );\n\t        var Fexpand = _react2.default.createElement(\n\t            Box,\n\t            { shadow: true, x: 50, y: 150, w: 400, h: 40 },\n\t            'Expanded to $48$ bits'\n\t        );\n\t\n\t        var SBoxes = [];\n\t        for (var i = 1; i <= 8; i += 1) {\n\t            var tmp = _react2.default.createElement(\n\t                Box,\n\t                { shadow: true, key: i, x: 75 * i, y: 330, w: 50, h: 50 },\n\t                '$S_' + (i - 1) + '$'\n\t            );\n\t            SBoxes.push(tmp);\n\t            for (var j = 0; j < 6; j++) {\n\t                SBoxes.push(_react2.default.createElement('path', { key: 1000 + i * 6 + j, style: pathStyleNoEnd, d: segs({ x: gp(tmp, \"north\").x + (j - 2.5) * 6, y: gp(XOR2, \"south\").y }, { x: gp(tmp, \"north\").x + (j - 2.5) * 6, y: gp(tmp, \"north\").y }) }));\n\t            }\n\t            for (var j = 0; j < 4; j++) {\n\t                SBoxes.push(_react2.default.createElement('path', { key: 2000 + i * 4 + j, style: pathStyleNoEnd, d: segs({ x: gp(tmp, \"south\").x + (j - 1.5) * 6, y: gp(tmp, \"south\").y }, { x: gp(tmp, \"south\").x + (j - 1.5) * 6, y: gp(tmp, \"south\").y + 20 }, { x: gp(FP, \"north\").x + (i * 4 - 4 + j - 15.5) * 6,\n\t                        y: gp(FP, \"north\").y - 15 }, { x: gp(FP, \"north\").x + (i * 4 - 4 + j - 15.5) * 6,\n\t                        y: gp(FP, \"north\").y }) }));\n\t            }\n\t        }\n\t\n\t        //============== tables ===================\n\t\n\t\n\t        var IPTable = [];\n\t        for (var i = 0; i < 8; i++) {\n\t            var row = [];\n\t            for (var j = 0; j < 8; j++) {\n\t                var tid = \"IP-\" + i + \"-\" + j;\n\t                row.push(_react2.default.createElement(\n\t                    'td',\n\t                    { style: { fontSize: \"150%\", fontFamily: 'monospace', border: '1px solid black', maxWidth: \"50px\", padding: \"0\" }, key: j },\n\t                    _react2.default.createElement('input', {\n\t                        style: { border: 'none', width: \"100%\", textAlign: 'center' },\n\t                        id: tid,\n\t                        onChange: this.updateArray.bind(this, 'IP', tid, i * 8 + j),\n\t                        value: this.state.IP[i * 8 + j] })\n\t                ));\n\t            }\n\t            IPTable.push(_react2.default.createElement(\n\t                'tr',\n\t                { key: i },\n\t                row\n\t            ));\n\t        }\n\t        IPTable = _react2.default.createElement(\n\t            'table',\n\t            { style: { border: '3px solid black' } },\n\t            _react2.default.createElement(\n\t                'tbody',\n\t                null,\n\t                _react2.default.createElement(\n\t                    'tr',\n\t                    null,\n\t                    _react2.default.createElement(\n\t                        'td',\n\t                        { style: { textAlign: 'center', position: 'relative' }, colSpan: 8 },\n\t                        'Initial Permutation $IP$',\n\t                        _react2.default.createElement(\n\t                            'button',\n\t                            { onClick: this.makeIPIdentity.bind(this), style: { position: 'absolute', lineHeight: '1', whiteSpace: 'nowrap', width: '70px', height: '20px', top: '0', right: '0', fontSize: '80%', backgroundColor: '#FDD' } },\n\t                            'Identity'\n\t                        ),\n\t                        _react2.default.createElement(\n\t                            'button',\n\t                            { onClick: this.swapIPandInvIP.bind(this, computed.InvIP), style: { position: 'absolute', lineHeight: '1', whiteSpace: 'nowrap', width: '70px', height: '20px', top: '20px', right: '0', fontSize: '80%', backgroundColor: '#FDD' } },\n\t                            'Swap $\\\\leftrightarrow$'\n\t                        )\n\t                    )\n\t                ),\n\t                IPTable\n\t            )\n\t        );\n\t\n\t        var appeared = {};\n\t        var InvIPTable = [];\n\t        for (var i = 0; i < 8; i++) {\n\t            var row = [];\n\t            for (var j = 0; j < 8; j++) {\n\t                var tid = \"InvIP-\" + i + \"-\" + j;\n\t                var v = computed.InvIP[i * 8 + j];\n\t                var flag = false;\n\t                if (appeared[v] === 1) {\n\t                    flag = true;\n\t                }\n\t                appeared[v] = 1;\n\t                row.push(_react2.default.createElement(\n\t                    'td',\n\t                    { style: { fontSize: \"150%\", fontFamily: 'monospace', maxWidth: \"50px\", padding: \"0\" }, key: j },\n\t                    _react2.default.createElement('input', { disabled: 'disabled',\n\t                        style: { border: 'none', width: \"100%\", textAlign: 'center', color: flag ? \"red\" : \"black\" },\n\t                        id: tid\n\t                        //onChange={this.updateArray.bind(this, 'InvIP', tid, i*8+j)}    // cannot change\n\t                        , value: computed.InvIP[i * 8 + j] })\n\t                ));\n\t            }\n\t            InvIPTable.push(_react2.default.createElement(\n\t                'tr',\n\t                { key: i },\n\t                row\n\t            ));\n\t        }\n\t        InvIPTable = _react2.default.createElement(\n\t            'table',\n\t            null,\n\t            _react2.default.createElement(\n\t                'tbody',\n\t                null,\n\t                _react2.default.createElement(\n\t                    'tr',\n\t                    null,\n\t                    _react2.default.createElement(\n\t                        'td',\n\t                        { style: { textAlign: 'center' }, colSpan: 8 },\n\t                        'Inversed Initial Permutation $IP^{-1}$'\n\t                    )\n\t                ),\n\t                InvIPTable\n\t            )\n\t        );\n\t\n\t        var SBoxTable = [];\n\t        for (var z = 0; z < 8; z++) {\n\t            var subtable = [];\n\t            for (var i = 0; i < 4; i++) {\n\t                var row = [];\n\t                if (i === 0) {\n\t                    row.push(_react2.default.createElement(\n\t                        'td',\n\t                        { style: { padding: '0', width: '50px', backgroundColor: '#DDD', textAlign: 'center', verticalAlign: 'middle', position: 'relative' }, key: -1, rowSpan: 4 },\n\t                        '$S_' + z + '$',\n\t                        _react2.default.createElement(\n\t                            'button',\n\t                            { onClick: this.updateSboxZero.bind(this, z), style: { position: 'absolute', lineHeight: '1', whiteSpace: 'nowrap', width: '45px', height: '20px', top: '0', left: '0', fontSize: '80%', backgroundColor: '#FDD' } },\n\t                            'Zero'\n\t                        )\n\t                    ));\n\t                }\n\t                for (var j = 0; j < 16; j++) {\n\t                    var stid = 'S-' + z + i + j;\n\t\n\t                    // check if that has been accessed\n\t                    var hasAccessed = computed.SboxAccessHistory[z * 64 + i * 16 + j] !== undefined;\n\t\n\t                    row.push(_react2.default.createElement(\n\t                        'td',\n\t                        { style: { fontSize: \"150%\", fontFamily: 'monospace', border: '1px solid black', maxWidth: \"50px\", padding: \"0\", textAlign: 'center' }, key: j },\n\t                        _react2.default.createElement('input', {\n\t                            style: { backgroundColor: hasAccessed ? 'gold' : '#DDD', border: 'none', textAlign: 'center', width: \"100%\" },\n\t                            id: stid,\n\t                            onChange: this.updateSbox.bind(this, 'Sbox', stid, z, i, j),\n\t                            value: this.state.Sbox[z][i][j] })\n\t                    ));\n\t                }\n\t                subtable.push(_react2.default.createElement(\n\t                    'tr',\n\t                    { key: i },\n\t                    row\n\t                ));\n\t            }\n\t            SBoxTable.push(_react2.default.createElement(\n\t                'table',\n\t                { style: { border: \"2px solid black\", maxWidth: 50 * 17 }, key: z * 2 },\n\t                _react2.default.createElement(\n\t                    'tbody',\n\t                    null,\n\t                    subtable\n\t                )\n\t            ));\n\t            SBoxTable.push(_react2.default.createElement('hr', { key: z * 2 + 1 }));\n\t        }\n\t\n\t        var PBoxTable = [];\n\t        for (var i = 0; i < 4; i++) {\n\t            var row = [];\n\t            for (var j = 0; j < 8; j++) {\n\t                var tid = \"Pbox-\" + i + \"-\" + j;\n\t                row.push(_react2.default.createElement(\n\t                    'td',\n\t                    { style: { backgroundColor: '#DDD', fontSize: \"150%\", fontFamily: 'monospace', border: '1px solid black', maxWidth: \"50px\", padding: \"0\" }, key: j },\n\t                    _react2.default.createElement('input', {\n\t                        style: { border: 'none', width: \"100%\", textAlign: 'center' },\n\t                        id: tid,\n\t                        onChange: this.updateArray.bind(this, 'Pbox', tid, i * 8 + j),\n\t                        value: this.state.Pbox[i * 8 + j] })\n\t                ));\n\t            }\n\t            PBoxTable.push(_react2.default.createElement(\n\t                'tr',\n\t                { key: i },\n\t                row\n\t            ));\n\t        }\n\t\n\t        PBoxTable = _react2.default.createElement(\n\t            'div',\n\t            { style: { width: \"400px\" } },\n\t            _react2.default.createElement(\n\t                'table',\n\t                { style: { border: '3px solid black' } },\n\t                _react2.default.createElement(\n\t                    'tbody',\n\t                    null,\n\t                    _react2.default.createElement(\n\t                        'tr',\n\t                        null,\n\t                        _react2.default.createElement(\n\t                            'td',\n\t                            { style: { position: 'relative', textAlign: 'center' }, colSpan: 8 },\n\t                            'P-Box',\n\t                            _react2.default.createElement(\n\t                                'button',\n\t                                { onClick: this.makePboxIdentity.bind(this), style: { position: 'absolute', lineHeight: '1', whiteSpace: 'nowrap', width: '70px', height: '20px', top: '0', right: '0', fontSize: '80%', backgroundColor: '#FDD' } },\n\t                                'Identity'\n\t                            )\n\t                        )\n\t                    ),\n\t                    PBoxTable\n\t                )\n\t            )\n\t        );\n\t\n\t        // TODO\n\t        var PC1Table = _react2.default.createElement('div', null);\n\t        var PC2Table = _react2.default.createElement('div', null);\n\t\n\t        var ActualExample = [];\n\t\n\t        var thStyle = { textAlign: 'center', border: '1px solid black', padding: '0' };\n\t        var tdStyle = { textAlign: 'center', border: '1px solid black', padding: '0', fontFamily: 'monospace', fontSize: '150%' };\n\t\n\t        ActualExample = DESresults.map(function (x, i) {\n\t            return _react2.default.createElement(\n\t                'tr',\n\t                { key: i },\n\t                _react2.default.createElement(\n\t                    'td',\n\t                    { style: thStyle },\n\t                    x[0]\n\t                ),\n\t                _react2.default.createElement(\n\t                    'td',\n\t                    { style: tdStyle },\n\t                    x[1]\n\t                ),\n\t                _react2.default.createElement(\n\t                    'td',\n\t                    { style: tdStyle },\n\t                    x[2]\n\t                ),\n\t                _react2.default.createElement(\n\t                    'td',\n\t                    { style: tdStyle },\n\t                    x[3]\n\t                )\n\t            );\n\t        });\n\t\n\t        console.log(computed.SboxAccessHistory);\n\t\n\t        ActualExample = _react2.default.createElement(\n\t            'table',\n\t            null,\n\t            _react2.default.createElement(\n\t                'thead',\n\t                null,\n\t                _react2.default.createElement(\n\t                    'tr',\n\t                    null,\n\t                    _react2.default.createElement(\n\t                        'th',\n\t                        { style: thStyle },\n\t                        'Round'\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        'th',\n\t                        { style: thStyle },\n\t                        '$K_i$'\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        'th',\n\t                        { style: thStyle },\n\t                        '$L_i$'\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        'th',\n\t                        { style: thStyle },\n\t                        '$R_i$'\n\t                    )\n\t                )\n\t            ),\n\t            _react2.default.createElement(\n\t                'tbody',\n\t                null,\n\t                ActualExample\n\t            )\n\t        );\n\t\n\t        return _react2.default.createElement(\n\t            'div',\n\t            null,\n\t            _react2.default.createElement(\n\t                'h2',\n\t                null,\n\t                'A Feistel Network Round'\n\t            ),\n\t            _react2.default.createElement(\n\t                'svg',\n\t                { width: '100%', height: '500', style: { backgroundColor: \"#EEE\" } },\n\t                _react2.default.createElement(\n\t                    'defs',\n\t                    null,\n\t                    _react2.default.createElement(\n\t                        'marker',\n\t                        { id: 'markerArrow', markerWidth: '15', markerHeight: '15', refX: '10', refY: '5', orient: 'auto', markerUnits: 'strokeWidth' },\n\t                        _react2.default.createElement('path', { d: 'M0,0 L0,11 L10,5 L0,0', style: { fill: '#000' } })\n\t                    )\n\t                ),\n\t                _react2.default.createElement('path', { style: pathStyle, d: segs(gp(L1, \"south\"), sw(L1, X), gp(X, \"west\")) }),\n\t                _react2.default.createElement('path', { style: pathStyle, d: segs(gp(R1, \"south\"), gp(F, \"north\")) }),\n\t                _react2.default.createElement('path', { style: pathStyle, d: segs(md(gp(R1, \"south\"), gp(F, \"north\")), off(-90, 0), gp(L2, \"north\")) }),\n\t                _react2.default.createElement('path', { style: pathStyle, d: segs(gp(F, \"south\"), gp(X, \"north\")) }),\n\t                _react2.default.createElement('path', { style: pathStyle, d: segs(gp(X, \"south\"), gp(R2, \"north\")) }),\n\t                L1,\n\t                R1,\n\t                C1,\n\t                D1,\n\t                C1Shift,\n\t                D1Shift,\n\t                F,\n\t                X,\n\t                L2,\n\t                R2,\n\t                C2,\n\t                D2,\n\t                K,\n\t                KPC2,\n\t                _react2.default.createElement('path', { style: pathStyle, d: segs(gp(KPC2, \"west\"), gp(K, \"east\")) }),\n\t                _react2.default.createElement('path', { style: pathStyle, d: segs(gp(K, \"west\"), gp(F, \"east\")) }),\n\t                _react2.default.createElement('path', { style: pathStyle, d: segs(gp(C1, \"south\"), gp(C1Shift, \"north\")) }),\n\t                _react2.default.createElement('path', { style: pathStyle, d: segs(gp(D1, \"south\"), gp(D1Shift, \"north\")) }),\n\t                _react2.default.createElement('path', { style: pathStyle, d: segs(pt(md(gp(C1Shift, \"south\"), gp(D1Shift, \"south\")).x, gp(KPC2, \"east\").y), gp(KPC2, \"east\")) }),\n\t                _react2.default.createElement('path', { style: pathStyle, d: segs(gp(C1Shift, \"south\"), off(0, 20), pt(md(gp(C1Shift, \"south\"), gp(D1Shift, \"south\")).x, gp(C1Shift, \"south\").y + 20), pt(md(gp(C1Shift, \"south\"), gp(D1Shift, \"south\")).x, gp(C2, \"north\").y - 30), pt(gp(C2, \"north\").x, gp(C2, \"north\").y - 30), off(0, 30)) }),\n\t                _react2.default.createElement('path', { style: pathStyle, d: segs(gp(D1Shift, \"south\"), off(0, 20), pt(md(gp(C1Shift, \"south\"), gp(D1Shift, \"south\")).x, gp(D1Shift, \"south\").y + 20), pt(md(gp(C1Shift, \"south\"), gp(D1Shift, \"south\")).x, gp(D2, \"north\").y - 30), pt(gp(D2, \"north\").x, gp(D2, \"north\").y - 30), off(0, 30)) }),\n\t                _react2.default.createElement(\n\t                    Box,\n\t                    { smalltext: true, noshape: true, x: gp(F, \"east\").x, y: 170, w: 120, h: 40 },\n\t                    '$48$-bits'\n\t                ),\n\t                textOnL1,\n\t                textOnR1,\n\t                textOnC1,\n\t                textOnD1\n\t            ),\n\t            _react2.default.createElement('p', null),\n\t            _react2.default.createElement(\n\t                'div',\n\t                { id: 'tdiv' },\n\t                _react2.default.createElement(\n\t                    'h2',\n\t                    null,\n\t                    'Inside Feistel\\'s F() function.'\n\t                ),\n\t                _react2.default.createElement(\n\t                    'svg',\n\t                    { width: '100%', height: '650', style: { backgroundColor: \"#EEE\" } },\n\t                    _react2.default.createElement('path', { style: pathStyle, d: segs(gp(Finput, \"south\"), { x: gp(Finput, \"south\").x, y: gp(Fexpand, \"north\").y }) }),\n\t                    _react2.default.createElement('path', { style: pathStyle, d: segs(gp(Fexpand, \"south\"), { x: gp(Fexpand, \"south\").x, y: gp(XOR2, \"north\").y }) }),\n\t                    _react2.default.createElement('path', { style: pathStyle, d: segs(gp(FK, \"south\"), off(0, 100), off(-160, 0), { x: gp(FK, \"south\").x - 160, y: gp(XOR2, \"north\").y }) }),\n\t                    _react2.default.createElement('path', { style: pathStyle, d: segs(gp(FP, \"south\"), gp(Foutput, \"north\")) }),\n\t                    FK,\n\t                    Finput,\n\t                    Fexpand,\n\t                    XOR2,\n\t                    SBoxes,\n\t                    FP,\n\t                    Foutput\n\t                ),\n\t                _react2.default.createElement('p', null),\n\t                _react2.default.createElement(\n\t                    'h2',\n\t                    null,\n\t                    'Entire DES Encryption/Decription Process'\n\t                ),\n\t                _react2.default.createElement(\n\t                    'h3',\n\t                    null,\n\t                    'Parameters'\n\t                ),\n\t                _react2.default.createElement(\n\t                    'div',\n\t                    null,\n\t                    _react2.default.createElement(\n\t                        'div',\n\t                        { style: { display: 'inline-block', maxWidth: \"400px\" } },\n\t                        IPTable\n\t                    ),\n\t                    _react2.default.createElement('div', { style: { display: 'inline-block', width: '50px' } }),\n\t                    _react2.default.createElement(\n\t                        'div',\n\t                        { style: { display: 'inline-block', maxWidth: \"400px\" } },\n\t                        InvIPTable\n\t                    )\n\t                ),\n\t                SBoxTable,\n\t                PBoxTable,\n\t                PC1Table,\n\t                PC2Table,\n\t                _react2.default.createElement(\n\t                    'h3',\n\t                    null,\n\t                    'The Actual Example'\n\t                ),\n\t                _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    'plaintext: ',\n\t                    _react2.default.createElement('input', { id: 'ptxt', style: { fontSize: '150%', fontFamily: 'monospace', width: '300px' }, onChange: this.updateState.bind(this, 'plaintext', 'ptxt'), value: this.state.plaintext })\n\t                ),\n\t                _react2.default.createElement(\n\t                    'p',\n\t                    null,\n\t                    'key: ',\n\t                    _react2.default.createElement('input', { id: 'ky', style: { fontSize: '150%', fontFamily: 'monospace', width: '300px' }, onChange: this.updateState.bind(this, 'key', 'ky'), value: this.state.key })\n\t                ),\n\t                ActualExample\n\t            )\n\t        );\n\t    };\n\t\n\t    return DES;\n\t}(_react.Component);\n\t\n\texports.default = DES;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-des-js-59e43be04766b0e27dc7.js","import React, { Component } from 'react'\n\n\nclass Box extends Component {\n    constructor() {\n        super()\n        this.uuid = Math.random().toString(36)\n        this.state = {\n            glowing: false\n        }\n    }\n    componentDidMount() {\n        this.nv.addEventListener('click', this.handleClick.bind(this))\n    }\n    componentWillUnmount() {\n        this.nv.removeEventListener('click', this.handleClick.bind(this))\n    }\n    handleClick() {\n        this.setState((o) => {\n            return { glowing: !o.glowing }\n        })\n    }\n    render() {\n        var rectStyle = {\n            fill: (this.state.glowing? 'gold': '#DDD'),\n            stroke: '#555',\n            strokeWidth: '2px'\n        }\n        var rectShadowStyle = {\n            fill: '#777'\n        }\n        const textWrapStyle = {display: 'table', width:'100%', height: '100%'}\n        var textStyle = {display: 'table-cell', textAlign: 'center', verticalAlign: 'middle'}\n\n        if (this.props.largetext) {\n            textStyle.fontSize = '200%'\n        }\n        if (this.props.smalltext) {\n            textStyle.fontSize = '70%'\n        }\n\n        if (this.props.noshape) {\n            rectStyle.fillOpacity = '0.0'\n            rectStyle.stroke = undefined\n            rectStyle.strokeWidth = undefined\n        }\n\n\n        if (window.MathJax !== undefined) {\n            window.MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, \"math-\" + this.uuid ]);\n        }\n\n        return (\n            <g ref={elem => this.nv = elem} >\n\n        {this.props.shadow && \n            <rect x={this.props.x+5} y={this.props.y+5} width={this.props.w} height={this.props.h} style={rectShadowStyle} />\n        }\n\n        <rect x={this.props.x} y={this.props.y} width={this.props.w} height={this.props.h} style={rectStyle} />\n        <foreignObject x={this.props.x} y={this.props.y} width={this.props.w} height={this.props.h}>\n        <div xmlns=\"http://www.w3.org/1999/xhtml\" style={textWrapStyle}>\n        <p id={\"math-\"+this.uuid} style={textStyle}>{this.props.children}</p>\n        </div>\n        </foreignObject>\n        \n        </g>\n        )\n    }\n}\n//<text x={this.props.x + this.props.w/2} y={this.props.y+this.props.h/2} dominantBaseline=\"central\" textAnchor=\"middle\">{this.props.children}</text>\n\nclass DES extends Component {\n    constructor() {\n        super()\n        this.state = {\n            key: \"0f1571c947d9e859\",\n            plaintext: \"02468aceeca86420\",\n            \n            // key schedule tables\n            PC1: [57, 49, 41, 33, 25, 17,  9,\n                1, 58, 50, 42, 34, 26, 18,\n               10,  2, 59, 51, 43, 35, 27,\n               19, 11,  3, 60, 52, 44, 36,\n               63, 55, 47, 39, 31, 23, 15,\n                7, 62, 54, 46, 38, 30, 22,\n               14,  6, 61, 53, 45, 37, 29,\n               21, 13,  5, 28, 20, 12,  4],\n            keyrotations: \n            [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1],\n\n            PC2: [14, 17, 11, 24,  1,  5,\n                3, 28, 15,  6, 21, 10,\n               23, 19, 12,  4, 26,  8,\n               16,  7, 27, 20, 13,  2,\n               41, 52, 31, 37, 47, 55,\n               30, 40, 51, 45, 33, 48,\n               44, 49, 39, 56, 34, 53,\n               46, 42, 50, 36, 29, 32],\n            \n            // permutation tables\n            IP: [58, 50, 42, 34, 26, 18, 10,  2,\n                60, 52, 44, 36, 28, 20, 12,  4,\n                62, 54, 46, 38, 30, 22, 14,  6,\n                64, 56, 48, 40, 32, 24, 16,  8,\n                57, 49, 41, 33, 25, 17,  9,  1,\n                59, 51, 43, 35, 27, 19, 11,  3,\n                61, 53, 45, 37, 29, 21, 13,  5,\n                63, 55, 47, 39, 31, 23, 15,  7\n            ],\n            \n            \n            // F function tables\n            E: [32,  1,  2,  3,  4,  5,  4,  5,\n                6,  7,  8,  9,  8,  9, 10, 11,\n               12, 13, 12, 13, 14, 15, 16, 17,\n               16, 17, 18, 19, 20, 21, 20, 21,\n               22, 23, 24, 25, 24, 25, 26, 27,\n               28, 29, 28, 29, 30, 31, 32,  1],\n\n            Sbox: \n            [\n                [\n                [14,  4, 13,  1,  2, 15, 11,  8,  3, 10,  6, 12,  5,  9,  0,  7],\n                [ 0, 15,  7,  4, 14,  2, 13,  1, 10,  6, 12, 11,  9,  5,  3,  8],\n                [ 4,  1, 14,  8, 13,  6,  2, 11, 15, 12,  9,  7,  3, 10,  5,  0],\n                [15, 12,  8,  2,  4,  9,  1,  7,  5, 11,  3, 14, 10,  0,  6, 13],\n                ],\n              \n                [\n                [15,  1,  8, 14,  6, 11,  3,  4,  9,  7,  2, 13, 12,  0,  5, 10],\n                [ 3, 13,  4,  7, 15,  2,  8, 14, 12,  0,  1, 10,  6,  9, 11,  5],\n                [ 0, 14,  7, 11, 10,  4, 13,  1,  5,  8, 12,  6,  9,  3,  2, 15],\n                [13,  8, 10,  1,  3, 15,  4,  2, 11,  6,  7, 12,  0,  5, 14,  9],\n                ],\n              \n                [\n                [10,  0,  9, 14,  6,  3, 15,  5,  1, 13, 12,  7, 11,  4,  2,  8],\n                [13,  7,  0,  9,  3,  4,  6, 10,  2,  8,  5, 14, 12, 11, 15,  1],\n                [13,  6,  4,  9,  8, 15,  3,  0, 11,  1,  2, 12,  5, 10, 14,  7],\n                [ 1, 10, 13,  0,  6,  9,  8,  7,  4, 15, 14,  3, 11,  5,  2, 12],\n                ],\n              \n                [\n                [ 7, 13, 14,  3,  0,  6,  9, 10,  1,  2,  8,  5, 11, 12,  4, 15],\n                [13,  8, 11,  5,  6, 15,  0,  3,  4,  7,  2, 12,  1, 10, 14,  9],\n                [10,  6,  9,  0, 12, 11,  7, 13, 15,  1,  3, 14,  5,  2,  8,  4],\n                [ 3, 15,  0,  6, 10,  1, 13,  8,  9,  4,  5, 11, 12,  7,  2, 14],\n                ],\n              \n                [\n                [ 2, 12,  4,  1,  7, 10, 11,  6,  8,  5,  3, 15, 13,  0, 14,  9],\n                [14, 11,  2, 12,  4,  7, 13,  1,  5,  0, 15, 10,  3,  9,  8,  6],\n                [ 4,  2,  1, 11, 10, 13,  7,  8, 15,  9, 12,  5,  6,  3,  0, 14],\n                [11,  8, 12,  7,  1, 14,  2, 13,  6, 15,  0,  9, 10,  4,  5,  3],\n                ],\n              \n                [\n                [12,  1, 10, 15,  9,  2,  6,  8,  0, 13,  3,  4, 14,  7,  5, 11],\n                [10, 15,  4,  2,  7, 12,  9,  5,  6,  1, 13, 14,  0, 11,  3,  8],\n                [ 9, 14, 15,  5,  2,  8, 12,  3,  7,  0,  4, 10,  1, 13, 11,  6],\n                [ 4,  3,  2, 12,  9,  5, 15, 10, 11, 14,  1,  7,  6,  0,  8, 13],\n                ],\n              \n                [\n                [ 4, 11,  2, 14, 15,  0,  8, 13,  3, 12,  9,  7,  5, 10,  6,  1],\n                [13,  0, 11,  7,  4,  9,  1, 10, 14,  3,  5, 12,  2, 15,  8,  6],\n                [ 1,  4, 11, 13, 12,  3,  7, 14, 10, 15,  6,  8,  0,  5,  9,  2],\n                [ 6, 11, 13,  8,  1,  4, 10,  7,  9,  5,  0, 15, 14,  2,  3, 12],\n                ],\n              \n                [\n                [13,  2,  8,  4,  6, 15, 11,  1, 10,  9,  3, 14,  5,  0, 12,  7],\n                [ 1, 15, 13,  8, 10,  3,  7,  4, 12,  5,  6, 11,  0, 14,  9,  2],\n                [ 7, 11,  4,  1,  9, 12, 14,  2,  0,  6, 10, 13, 15,  3,  5,  8],\n                [ 2,  1, 14,  7,  4, 10,  8, 13, 15, 12,  9,  0,  3,  5,  6, 11],\n                ]\n            ],\n            Pbox:\n            [16,  7, 20, 21, 29, 12, 28, 17,\n                1, 15, 23, 26,  5, 18, 31, 10,\n                2,  8, 24, 14, 32, 27,  3,  9,\n               19, 13, 30,  6, 22, 11,  4, 25]\n\n            \n        }\n    }\n\n    \n    updateState(key, id) {\n        var t = document.getElementById(id).value;\n        var st = JSON.parse(JSON.stringify(this.state))\n        st[key] = t;\n        if (t.match(/[^A-Fa-f0-9]/) === null) {\n            this.setState(st);\n        }\n    }\n    updateArray(key, id, idx) {\n        var t = parseInt(document.getElementById(id).value) || 0;\n        var st = JSON.parse(JSON.stringify(this.state))\n        st[key][idx] = t;\n        this.setState(st);\n    }\n    updateSbox(key, id, which, outeridx, inneridx) {\n        var t = parseInt(document.getElementById(id).value) || 0;\n        var st = JSON.parse(JSON.stringify(this.state))\n        st[key][which][outeridx][inneridx] = t;\n        this.setState(st);\n    }\n    updateSboxZero(which) {\n        var st = JSON.parse(JSON.stringify(this.state))\n        for (var i = 0; i < 4;i+=1)\n            for (var j = 0; j < 16; j+=1) {\n                st['Sbox'][which][i][j] = 0;\n            }\n        this.setState(st)\n    }\n    makeIPIdentity() {\n        var st = JSON.parse(JSON.stringify(this.state))\n        for (var i = 0; i < 64; i++)\n            st.IP[i] = i+1;\n        this.setState(st)\n    }\n    makePboxIdentity() {\n        var st = JSON.parse(JSON.stringify(this.state))\n        for (var i = 0; i < 32; i++)\n        st.Pbox[i] = i+1;\n        this.setState(st)\n    }\n    swapIPandInvIP(InvIP) {\n        var st = JSON.parse(JSON.stringify(this.state))\n        st.IP = InvIP\n        this.setState(st)\n    }\n\n\n    runDES(computed) {\n        const hex2bin = function(str) {\n            var t = \"\"\n            for (var i = 0; i < str.length; i++) {\n                var v = parseInt(str[i], 16).toString(2)\n                t += \"0000\".substr(v.length) + v\n            }\n            return t\n        }\n        const bin2hex = function(str) {\n            var t = \"\"\n            for (var i = 0; i < str.length; i+=4) {\n                var v = parseInt(str.substr(i, 4), 2).toString(16)\n                t += v\n            }\n            return t\n        }\n        const subKeyDisplay = function(str) {\n            var t = \"\"\n            for (var i = 0; i < str.length; i += 6) {\n                var v1 = parseInt(str.substr(i, 2), 2).toString(16)\n                var v2 = parseInt(str.substr(i+2, 4), 2).toString(16)\n                t += v1 + v2 + \" \"\n            }\n            return t\n        }\n        const permute = function(text, P) {\n            var t = \"\"\n            for (var i = 0; i < P.length; i++) {\n                t += text[P[i]-1];\n            }\n            return t;\n        }\n        const circularShiftL = function(str) {\n            return str.substr(1) + str[0]\n        }\n        const Xor = function(x, y) {\n            if (x.length != y.length) console.warn(\"xor : length does not match!\")\n            var t = \"\"\n            for (var i = 0; i < x.length; i++) {\n                t += (x[i] === y[i]? \"0\": \"1\")\n            }\n            return t\n        }\n    \n\n        var F = (function(computed, round, R, K) {\n            var E = permute(R, this.state.E)\n            var beforeS = Xor(E, K)\n            var afterS = \"\"\n            \n            for (var i = 0; i < beforeS.length; i+=6) {\n                var outer = beforeS[i] + beforeS[i+5]\n                var inner = beforeS.substr(i+1, 4)\n                var outerIdx = parseInt(outer, 2)\n                var innerIdx = parseInt(inner, 2)\n                var v = this.state.Sbox[i/6][outerIdx][innerIdx].toString(2)\n                \n                // logging use\n                computed.SboxAccessHistory[Math.floor(i/6)*64+outerIdx*16+innerIdx] = round;\n\n                afterS += \"0000\".substr(v.length) + v\n            }\n            return permute(afterS, this.state.Pbox)\n        }).bind(this, computed)\n\n        var plaintext = hex2bin(computed.plaintext);\n        var IPed = permute(plaintext, this.state.IP)\n\n        var results = []\n        var L = IPed.substr(0, 32)\n        var R = IPed.substr(32, 32)\n        var key = hex2bin(computed.key)\n        var K = permute(key, this.state.PC1)\n        if (K.length != 56) console.warn(\"Incorrect key length!\")\n\n        results.push([\"IP\", \"\", bin2hex(L), bin2hex(R)])\n        for (var i = 1; i <= 16; i++) {\n            // key generation\n            var C = K.substr(0, 28)\n            var D = K.substr(28, 28)\n            for (var times = 0; times < this.state.keyrotations[i-1]; times+=1) {\n                C = circularShiftL(C)\n                D = circularShiftL(D)\n            }\n            K = C+D\n            var subKey = permute(K, this.state.PC2)\n            \n\n\n            var tmp = R\n            R = Xor(F(i, R, subKey), L)\n            L = tmp\n            results.push([`${i}`, subKeyDisplay(subKey), bin2hex(L), bin2hex(R)])\n        }\n        tmp = L\n        L = R\n        R = tmp\n        results.push([\"Swap\", \"\", bin2hex(L), bin2hex(R)])\n\n        var InvIPed = permute(L+R, computed.InvIP)\n        L = InvIPed.substr(0, 32)\n        R = InvIPed.substr(32, 32)\n        results.push([\"InvIP\", \"\", bin2hex(L), bin2hex(R)])\n        return results\n    }\n    \n    \n    render() {\n\n        const legalize = (hexstr) => \"0000000000000000\".substr(hexstr.length) + hexstr;\n\n        // ================ data generation ===================\n        var computed = {\n            InvIP: [40,  8, 48, 16, 56, 24, 64, 32,\n                39,  7, 47, 15, 55, 23, 63, 31,\n                38,  6, 46, 14, 54, 22, 62, 30,\n                37,  5, 45, 13, 53, 21, 61, 29,\n                36,  4, 44, 12, 52, 20, 60, 28,\n                35,  3, 43, 11, 51, 19, 59, 27,\n                34,  2, 42, 10, 50, 18, 58, 26,\n                33,  1, 41,  9, 49, 17, 57, 25],\n            SboxAccessHistory: {},\n            plaintext: legalize(this.state.plaintext),\n            key: legalize(this.state.key)\n        }\n\n        for (var i = 0; i < 64; i++) {\n            computed.InvIP[this.state.IP[i]-1] = i+1\n        }\n\n        const DESresults = this.runDES(computed);\n\n\n\n        // ============== diagrams =========================\n\n\n        const L1 = (<Box shadow x={50} y={30} w={150} h={40}>{`$L_{i-1}$`}</Box>);\n        const R1 = (<Box shadow x={240} y={30} w={150} h={40}>{`$R_{i-1}$`}</Box>);\n        const C1 = (<Box shadow x={500} y={30} w={150} h={40}>{`$C_{i-1}$`}</Box>);\n        const D1 = (<Box shadow x={690} y={30} w={150} h={40}>{`$D_{i-1}$`}</Box>);\n\n        const C1Shift = (<Box smalltext x={500} y={100} w={150} h={30}>{`Left Circular Shift[$i$]`}</Box>);\n        const D1Shift = (<Box smalltext x={690} y={100} w={150} h={30}>{`Left Circular Shift[$i$]`}</Box>);\n\n        const F = (<Box x={240+45} y={170} w={60} h={60}>{`$F$`}</Box>);\n        const X = (<Box largetext noshape x={240+45+10} y={(170+430)/2+10} w={60-20} h={60-20}>{`$\\\\oplus$`}</Box>);\n\n        const L2 = (<Box shadow x={50} y={430} w={150} h={40}>{`$L_{i}$`}</Box>);\n        const R2 = (<Box shadow x={240} y={430} w={150} h={40}>{`$R_{i}$`}</Box>);\n        const C2 = (<Box shadow x={500} y={430} w={150} h={40}>{`$C_{i}$`}</Box>);\n        const D2 = (<Box shadow x={690} y={430} w={150} h={40}>{`$D_{i}$`}</Box>);\n        \n        const K = (<Box shadow x={460} y={170} w={60} h={60}>{`$K_{i}$`}</Box>)\n        const KPC2 = (<Box shadow x={580} y={170} w={60} h={60}>{`$\\\\textrm{PC}_2$`}</Box>)\n        \n\n\n        const pathStyle = {\n            markerEnd: \"url(#markerArrow)\",\n            stroke: \"#000\",\n            strokeWidth: \"1px\",\n            fill: 'none'\n        }\n        const pathStyleNoEnd = {\n            stroke: \"#000\",\n            strokeWidth: \"1px\",\n            fill: 'none'\n        }\n\n        const gp = function(rect, p) {\n            if (p === \"east\") {\n                return {x: rect.props.x + rect.props.w,\n                    y: rect.props.y + rect.props.h/2}\n            } else if (p === \"west\") {\n                return {x: rect.props.x,\n                    y: rect.props.y + rect.props.h/2}\n            } else if (p === \"north\") {\n                return {x: rect.props.x + rect.props.w/2,\n                    y: rect.props.y}\n            } else if (p === \"south\") {\n                return {x: rect.props.x + rect.props.w/2,\n                    y: rect.props.y + rect.props.h}\n            }\n        }\n        const segs = function(from) {\n            \n            var x = from.x;\n            var y = from.y;\n            var ret = \"M\" + x + \",\" + y + \" \";\n\n            var args = Array.prototype.slice.call(arguments, 1);\n            const lst = args.map(p => (p.l || \"L\") + p.x + \",\" + p.y)\n            ret += lst.join(\" \")\n            \n            return ret;\n        }\n        // south-west\n        const sw = function(r1, r2) {\n            return {x: Math.min(r1.props.x+r1.props.w/2, r2.props.x+r2.props.w/2),\n                y: Math.max(r1.props.y+r1.props.h/2, r2.props.y+r2.props.h/2)}\n        }\n        // middle of two points\n        const md = function(p1, p2) {\n            return {x: (p1.x+p2.x)/2, y: (p1.y+p2.y)/2}\n        }\n        // offset\n        const off = function(dx, dy) {\n            return {l: \"l\", x: dx, y: dy};\n        }\n        const pt = function(x, y) {\n            return {x: x, y: y}\n        }\n\n\n\n        const textOnL1 = (<g>\n            <Box smalltext noshape x={50} y={0} w={150} h={40}>{`$32$-bits`}</Box>\n            <path style={pathStyle} d={segs(pt(100, 20), pt(50, 20))} />\n            <path style={pathStyle} d={segs(pt(150, 20), pt(200, 20))} />\n            </g>)\n\n        const textOnR1 = (<g>\n        <Box smalltext noshape x={240} y={0} w={150} h={40}>{`$32$-bits`}</Box>\n        <path style={pathStyle} d={segs(pt(290, 20), off(-50, 0))} />\n        <path style={pathStyle} d={segs(pt(340, 20), off(50, 0))} />\n        </g>)\n        const textOnC1 = (<g>\n            <Box smalltext noshape x={gp(C1,\"west\").x} y={0} w={150} h={40}>{`$28$-bits`}</Box>\n            <path style={pathStyle} d={segs(pt(gp(C1,\"north\").x-25, 20), off(-50, 0))} />\n            <path style={pathStyle} d={segs(pt(gp(C1,\"north\").x+25, 20), off(50, 0))} />\n            </g>)\n        const textOnD1 = (<g>\n            <Box smalltext noshape x={gp(D1,\"west\").x} y={0} w={150} h={40}>{`$28$-bits`}</Box>\n            <path style={pathStyle} d={segs(pt(gp(D1,\"north\").x-25, 20), off(-50, 0))} />\n            <path style={pathStyle} d={segs(pt(gp(D1,\"north\").x+25, 20), off(50, 0))} />\n            </g>)\n\n        const Finput = (<Box shadow  x={50} y={60} w={300} h={40}>{`\\$R_{i-1}\\$: \\$32\\$ bits`}</Box>)\n        const XOR2 = (<Box shadow x={75} y={260} w={75*8-25} h={30}>{`XOR $\\\\oplus$`}</Box>)\n        const Foutput = (<Box shadow  x={200} y={540} w={300} h={40}>{`Output`}</Box>)\n        const FP = (<Box shadow  x={200} y={460} w={300} h={40}>{`Permutation $P$`}</Box>)\n        const FK = (<Box shadow x={460} y={60} w={400} h={40}>{`$K_i$: $48$ bits`}</Box>)\n        const Fexpand = (<Box shadow  x={50} y={150} w={400} h={40}>{`Expanded to $48$ bits`}</Box>)\n\n        var SBoxes = [];\n        for (var i=1;i<=8;i+=1) {\n            const tmp = (<Box shadow key={i} x={75*i} y={330} w={50} h={50}>{`$S_${i-1}$`}</Box>);\n            SBoxes.push(tmp)\n            for (var j=0;j<6;j++) {\n                SBoxes.push((<path key={1000+i*6+j} style={pathStyleNoEnd} d={segs(\n                    {x: gp(tmp, \"north\").x + (j-2.5)*6, y: gp(XOR2, \"south\").y },\n                    {x: gp(tmp, \"north\").x + (j-2.5)*6, y: gp(tmp, \"north\").y }\n                )}/>))\n                \n            }\n            for (var j=0; j<4; j++) {\n                SBoxes.push((<path key={2000+i*4+j} style={pathStyleNoEnd} d={segs(\n                    {x: gp(tmp, \"south\").x + (j-1.5)*6, y: gp(tmp, \"south\").y },\n                    {x: gp(tmp, \"south\").x + (j-1.5)*6, y: gp(tmp, \"south\").y + 20 },\n                    {x: gp(FP, \"north\").x + (i*4-4+j-15.5)*6,\n                     y: gp(FP, \"north\").y - 15 },\n                     {x: gp(FP, \"north\").x + (i*4-4+j-15.5)*6,\n                     y: gp(FP, \"north\").y }\n                )}/>))\n            }\n        }\n        \n        \n\n//============== tables ===================\n\n\n        var IPTable = []\n        for (var i = 0; i < 8; i++) {\n            var row = []\n            for (var j = 0; j < 8; j++) {\n                var tid = \"IP-\"+i+\"-\"+j;\n                row.push(<td style={{fontSize: \"150%\", fontFamily: 'monospace', border: '1px solid black', maxWidth: \"50px\", padding: \"0\"}} key={j}><input\n                    style={{border: 'none', width: \"100%\", textAlign: 'center'}}\n                    id={tid}\n                    onChange={this.updateArray.bind(this, 'IP', tid, i*8+j)}\n                    value={this.state.IP[i*8+j]}/></td>)\n            }\n            IPTable.push((<tr key={i} >{row}</tr>))\n        }\n        IPTable = (<table style={{border: '3px solid black'}}><tbody><tr><td style={{textAlign: 'center', position: 'relative'}} colSpan={8}>Initial Permutation $IP$\n        <button onClick={this.makeIPIdentity.bind(this)} style={{position: 'absolute', lineHeight: '1', whiteSpace: 'nowrap', width: '70px', height: '20px', top: '0', right: '0', fontSize: '80%', backgroundColor: '#FDD'}}>Identity</button>\n        <button onClick={this.swapIPandInvIP.bind(this, computed.InvIP)} style={{position: 'absolute', lineHeight: '1', whiteSpace: 'nowrap', width: '70px', height: '20px', top: '20px', right: '0', fontSize: '80%', backgroundColor: '#FDD'}}>Swap $\\leftrightarrow$</button>\n        </td></tr>{IPTable}</tbody></table>)\n        \n\n\n        var appeared = {}\n        var InvIPTable = []\n        for (var i = 0; i < 8; i++) {\n            var row = []\n            for (var j = 0; j < 8; j++) {\n                var tid = \"InvIP-\"+i+\"-\"+j;\n                var v = computed.InvIP[i*8+j];\n                var flag = false\n                if (appeared[v] === 1) {\n                    flag = true\n                }\n                appeared[v] = 1;\n                row.push(<td style={{fontSize: \"150%\", fontFamily: 'monospace', maxWidth: \"50px\", padding: \"0\"}} key={j}><input disabled=\"disabled\"\n                    style={{border: 'none', width: \"100%\", textAlign: 'center', color: (flag? \"red\": \"black\")}}\n                    id={tid}\n                    //onChange={this.updateArray.bind(this, 'InvIP', tid, i*8+j)}    // cannot change\n                    value={computed.InvIP[i*8+j]}/></td>)\n            }\n            InvIPTable.push((<tr key={i}>{row}</tr>))\n        }\n        InvIPTable = (<table><tbody><tr><td style={{textAlign: 'center'}} colSpan={8}>{`Inversed Initial Permutation $IP^{-1}$`}</td></tr>{InvIPTable}</tbody></table>)\n        \n        var SBoxTable = []\n        for (var z=0;z<8;z++) {\n            var subtable = []\n            for (var i=0;i<4;i++) {\n                var row = []\n                if (i === 0) {\n                    row.push(<td style={{padding: '0', width: '50px', backgroundColor: '#DDD', textAlign: 'center', verticalAlign: 'middle', position: 'relative'}} key={-1} rowSpan={4}>{`$S_${z}$`}\n                    <button onClick={this.updateSboxZero.bind(this, z)} style={{position: 'absolute', lineHeight: '1', whiteSpace: 'nowrap', width: '45px', height: '20px', top: '0', left: '0', fontSize: '80%', backgroundColor: '#FDD'}}>Zero</button>\n                    </td>)\n                }\n                for (var j=0;j<16;j++) {\n                    var stid = `S-${z}${i}${j}`\n\n                    // check if that has been accessed\n                    var hasAccessed = (computed.SboxAccessHistory[z*64+i*16+j] !== undefined);\n\n                    row.push(<td style={{fontSize: \"150%\", fontFamily: 'monospace', border: '1px solid black', maxWidth: \"50px\", padding: \"0\", textAlign: 'center'}} key={j}><input\n                    style={{backgroundColor: (hasAccessed? 'gold': '#DDD'), border: 'none', textAlign: 'center', width: \"100%\"}}\n                    id={stid}\n                    onChange={this.updateSbox.bind(this, 'Sbox', stid, z, i, j)}\n                    value={this.state.Sbox[z][i][j]}/></td>\n                    )\n                }\n                subtable.push(<tr key={i}>{row}</tr>)\n                \n            }\n            SBoxTable.push(<table style={{border: \"2px solid black\", maxWidth: 50*17}} key={z*2}>\n                <tbody>\n                    {subtable}\n                </tbody>\n            </table>)\n            SBoxTable.push(<hr key={z*2+1} />)\n        }\n\n\n        var PBoxTable = []\n        for (var i = 0; i < 4; i++) {\n            var row = []\n            for (var j = 0; j < 8; j++) {\n                var tid = \"Pbox-\"+i+\"-\"+j;\n                row.push(<td style={{backgroundColor: '#DDD', fontSize: \"150%\", fontFamily: 'monospace', border: '1px solid black', maxWidth: \"50px\", padding: \"0\"}} key={j}><input\n                    style={{border: 'none', width: \"100%\", textAlign: 'center'}}\n                    id={tid}\n                    onChange={this.updateArray.bind(this, 'Pbox', tid, i*8+j)}\n                    value={this.state.Pbox[i*8+j]}/></td>)\n            }\n            PBoxTable.push((<tr key={i} >{row}</tr>))\n        }\n    \n        PBoxTable = (<div style={{width: \"400px\"}}>\n        <table style={{border: '3px solid black'}}><tbody><tr><td style={{position: 'relative', textAlign: 'center'}} colSpan={8}>{`P-Box`}\n        <button onClick={this.makePboxIdentity.bind(this)} style={{position: 'absolute', lineHeight: '1', whiteSpace: 'nowrap', width: '70px', height: '20px', top: '0', right: '0', fontSize: '80%', backgroundColor: '#FDD'}}>Identity</button>\n        </td></tr>{PBoxTable}</tbody></table></div>\n        )\n\n\n        // TODO\n        var PC1Table = (<div></div>)\n        var PC2Table = (<div></div>)\n        \n        var ActualExample = []\n        \n        var thStyle = {textAlign: 'center', border: '1px solid black', padding: '0'}\n        var tdStyle = {textAlign: 'center', border: '1px solid black', padding: '0', fontFamily: 'monospace', fontSize: '150%'}\n\n\n        \n        ActualExample = DESresults.map((x, i) => (<tr key={i}>\n            <td style={thStyle}>{x[0]}</td>\n            <td style={tdStyle}>{x[1]}</td>\n            <td style={tdStyle}>{x[2]}</td>\n            <td style={tdStyle}>{x[3]}</td>\n            </tr>\n            ))\n        \n            console.log(computed.SboxAccessHistory)\n\n\n        ActualExample = (\n            <table>\n                <thead><tr>\n                    <th style={thStyle}>Round</th>\n                    <th style={thStyle}>$K_i$</th>\n                    <th style={thStyle}>$L_i$</th>\n                    <th style={thStyle}>$R_i$</th></tr></thead>\n                <tbody>{ActualExample}</tbody>\n            </table>\n        )\n\n\n\n        return (\n            <div>\n                <h2>A Feistel Network Round</h2>\n            <svg width=\"100%\" height=\"500\" style={{backgroundColor: \"#EEE\"}}>\n            <defs>\n            <marker id=\"markerArrow\" markerWidth=\"15\" markerHeight=\"15\" refX=\"10\" refY=\"5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                <path d=\"M0,0 L0,11 L10,5 L0,0\" style={{fill: '#000'}} />\n            </marker>\n            </defs>\n            <path style={pathStyle} d={segs(gp(L1, \"south\"), sw(L1, X), gp(X, \"west\"))}/>\n            <path style={pathStyle} d={segs(gp(R1, \"south\"), gp(F, \"north\"))}/>\n            <path style={pathStyle} d={segs(md(gp(R1, \"south\"), gp(F, \"north\")), off(-90, 0), gp(L2, \"north\"))} />\n            <path style={pathStyle} d={segs(gp(F, \"south\"), gp(X, \"north\"))} />\n            <path style={pathStyle} d={segs(gp(X, \"south\"), gp(R2, \"north\"))} />\n            \n            {L1}\n            {R1}\n            {C1}\n            {D1}\n            {C1Shift}\n            {D1Shift}\n            \n            {F}\n            {X}\n            \n            {L2}\n            {R2}\n            {C2}\n            {D2}\n\n            {K}\n            {KPC2}\n            <path style={pathStyle} d={segs(gp(KPC2, \"west\"), gp(K, \"east\"))} />\n            <path style={pathStyle} d={segs(gp(K, \"west\"), gp(F, \"east\"))} />\n            <path style={pathStyle} d={segs(gp(C1, \"south\"), gp(C1Shift, \"north\"))} />\n            <path style={pathStyle} d={segs(gp(D1, \"south\"), gp(D1Shift, \"north\"))} />\n            <path style={pathStyle} d={segs(\n                pt(md(gp(C1Shift, \"south\"), gp(D1Shift, \"south\")).x, gp(KPC2, \"east\").y),\n                gp(KPC2, \"east\")\n            )} />\n            <path style={pathStyle} d={segs(\n                gp(C1Shift, \"south\"), \n                off(0, 20),\n                pt(md(gp(C1Shift, \"south\"), gp(D1Shift, \"south\")).x, gp(C1Shift, \"south\").y+20),\n                pt(md(gp(C1Shift, \"south\"), gp(D1Shift, \"south\")).x, gp(C2, \"north\").y-30),\n                pt(gp(C2, \"north\").x, gp(C2, \"north\").y-30),\n                off(0, 30)\n                )} />\n            <path style={pathStyle} d={segs(\n                gp(D1Shift, \"south\"), \n                off(0, 20),\n                pt(md(gp(C1Shift, \"south\"), gp(D1Shift, \"south\")).x, gp(D1Shift, \"south\").y+20),\n                pt(md(gp(C1Shift, \"south\"), gp(D1Shift, \"south\")).x, gp(D2, \"north\").y-30),\n                pt(gp(D2, \"north\").x, gp(D2, \"north\").y-30),\n                off(0, 30)\n                )} />\n            <Box smalltext noshape x={gp(F,\"east\").x} y={170} w={120} h={40}>{`$48$-bits`}</Box>\n            \n            {textOnL1}\n            {textOnR1}\n            {textOnC1}\n            {textOnD1}\n            \n            </svg>\n            <p></p>\n            <div id=\"tdiv\">\n            <h2>Inside Feistel's F() function.</h2>\n\n            <svg width=\"100%\" height=\"650\" style={{backgroundColor: \"#EEE\"}}>\n            \n            <path style={pathStyle} d={segs(\n                gp(Finput, \"south\"),\n                {x: gp(Finput, \"south\").x, y: gp(Fexpand, \"north\").y}\n            )}/>\n            <path style={pathStyle} d={segs(\n                gp(Fexpand, \"south\"),\n                {x: gp(Fexpand, \"south\").x, y: gp(XOR2, \"north\").y}\n            )}/>\n            <path style={pathStyle} d={segs(\n                gp(FK, \"south\"),\n                off(0, 100),\n                off(-160, 0),\n                {x: gp(FK, \"south\").x-160, y: gp(XOR2, \"north\").y}\n            )}/>\n            <path style={pathStyle} d={segs(\n                gp(FP, \"south\"),\n                gp(Foutput, \"north\")\n            )}/>\n            {FK}\n            {Finput}\n            {Fexpand}\n            {XOR2}\n            {SBoxes}\n            {FP}\n            {Foutput}\n            \n\n            </svg>\n            <p></p>\n            <h2>Entire DES Encryption/Decription Process</h2>\n            <h3>Parameters</h3>\n            <div>\n            <div style={{display: 'inline-block', maxWidth: \"400px\"}}>{IPTable}</div>\n            <div style={{display: 'inline-block', width: '50px'}}></div>\n            <div style={{display: 'inline-block', maxWidth: \"400px\"}}>{InvIPTable}</div>\n            </div>\n            {SBoxTable}\n            {PBoxTable}\n            {PC1Table}\n            {PC2Table}\n            <h3>The Actual Example</h3>\n            <p>plaintext: <input id='ptxt' style={{fontSize: '150%', fontFamily: 'monospace', width: '300px'}} onChange={this.updateState.bind(this,'plaintext', 'ptxt')} value={this.state.plaintext} /></p>\n            <p>key: <input id='ky' style={{fontSize: '150%', fontFamily: 'monospace', width: '300px'}}  onChange={this.updateState.bind(this, 'key', 'ky')} value={this.state.key} /></p>\n            {ActualExample}\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default DES;\n\n\n// WEBPACK FOOTER //\n// ./src/pages/des.js"],"sourceRoot":""}