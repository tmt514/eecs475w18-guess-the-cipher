{"version":3,"sources":["webpack:///component---src-pages-frequency-analysis-js-31a15617ac773af1f48d.js","webpack:///./src/pages/frequency-analysis.js"],"names":["webpackJsonp","182","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_react","_react2","_gatsbyLink","_gatsbyLink2","CharHead","_Component","this","apply","arguments","render","createElement","style","display","width","textAlign","props","ch","Component","BarBody","_Component2","fw","freq","sum","fwidth","wholeBoxStyle","margin","innerBarStyle","borderTop","borderBottom","verticalAlign","lineHeight","maxWidth","backgroundColor","color","overflow","fontSize","whiteSpace","transition","innerTextStyle","outerBarStyle","position","zIndex","toFixed","Histogram","_Component3","_this3","state","sortBy","sortByAlpha","setState","sortByFreq","_this4","d","counts","m","mapping","lis","i","String","fromCharCode","push","s","inputBoxStyle","padding","sort","a","b","parseInt","lip","map","e","marginBottom","alignItems","key","id","onChange","controller","substituteChange","bind","onClick","listStyle","ToggleButton","_Component4","ctl","h","highlight","isOn","buttonStyle","highlightKeyword","fontFamily","CaesarCipher","_Component5","_this6","paragraph","componentDidMount","keyword","mode","p","JSON","parse","stringify","undefined","o","inputboxID","c","document","getElementById","length","console","log","updateText","t","_this7","toUpperCase","replace","bigram","bigramlist","trigram","trigramlist","st","decodedText","markedText","kw","ok","j","chStyle","chDisplay","blist","tlist","flex","rows","flexWrap","to"],"mappings":"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","file":"component---src-pages-frequency-analysis-js-31a15617ac773af1f48d.js","sourcesContent":["webpackJsonp([240882191695945],{\n\n/***/ 182:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(4);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(42);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar CharHead = function (_Component) {\n\t    _inherits(CharHead, _Component);\n\t\n\t    function CharHead() {\n\t        _classCallCheck(this, CharHead);\n\t\n\t        return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t    }\n\t\n\t    CharHead.prototype.render = function render() {\n\t        return _react2.default.createElement(\n\t            'div',\n\t            { style: { display: \"inline-block\", width: \"50px\", textAlign: \"center\" } },\n\t            this.props.ch\n\t        );\n\t    };\n\t\n\t    return CharHead;\n\t}(_react.Component);\n\t\n\tvar BarBody = function (_Component2) {\n\t    _inherits(BarBody, _Component2);\n\t\n\t    function BarBody() {\n\t        _classCallCheck(this, BarBody);\n\t\n\t        return _possibleConstructorReturn(this, _Component2.apply(this, arguments));\n\t    }\n\t\n\t    BarBody.prototype.render = function render() {\n\t        var fw = this.props.freq / this.props.sum;\n\t        var fwidth = fw * 3000;\n\t        var wholeBoxStyle = {\n\t            width: \"100%\",\n\t            display: \"block\",\n\t            margin: \"0px\"\n\t        };\n\t        var innerBarStyle = {\n\t            borderTop: \"2px solid white\",\n\t            borderBottom: \"2px solid white\",\n\t            verticalAlign: \"middle\",\n\t            lineHeight: \"1.5\",\n\t            display: \"table\",\n\t            width: fwidth + \"px\",\n\t            maxWidth: fwidth + \"px\",\n\t            backgroundColor: \"darkblue\",\n\t            color: \"white\",\n\t            overflow: \"hidden\",\n\t            fontSize: \"50%\",\n\t            whiteSpace: \"nowrap\",\n\t            transition: \"all 0.5s\"\n\t        };\n\t        var innerTextStyle = {\n\t            display: \"table-cell\",\n\t            width: fwidth + \"px\",\n\t            maxWidth: fwidth + \"px\"\n\t        };\n\t        var outerBarStyle = {\n\t            position: \"absolute\",\n\t            width: \"100%\",\n\t            display: \"table\",\n\t            fontSize: \"50%\",\n\t            overflow: \"hidden\",\n\t            borderTop: \"2px solid white\",\n\t            borderBottom: \"2px solid white\",\n\t            lineHeight: \"1.5\",\n\t            zIndex: \"-5\"\n\t        };\n\t        return _react2.default.createElement(\n\t            'div',\n\t            { style: wholeBoxStyle },\n\t            _react2.default.createElement(\n\t                'div',\n\t                { style: outerBarStyle },\n\t                _react2.default.createElement(\n\t                    'div',\n\t                    { style: { display: \"table-cell\" } },\n\t                    '\\xA0',\n\t                    (fw * 100).toFixed(2),\n\t                    '%'\n\t                )\n\t            ),\n\t            _react2.default.createElement(\n\t                'div',\n\t                { style: innerBarStyle },\n\t                _react2.default.createElement(\n\t                    'div',\n\t                    { style: innerTextStyle },\n\t                    '\\xA0',\n\t                    (fw * 100).toFixed(2),\n\t                    '%'\n\t                )\n\t            )\n\t        );\n\t    };\n\t\n\t    return BarBody;\n\t}(_react.Component);\n\t\n\tvar Histogram = function (_Component3) {\n\t    _inherits(Histogram, _Component3);\n\t\n\t    function Histogram() {\n\t        _classCallCheck(this, Histogram);\n\t\n\t        var _this3 = _possibleConstructorReturn(this, _Component3.call(this));\n\t\n\t        _this3.state = { sortBy: \"alpha\" };\n\t        return _this3;\n\t    }\n\t\n\t    Histogram.prototype.sortByAlpha = function sortByAlpha() {\n\t        this.setState({ sortBy: \"alpha\" });\n\t    };\n\t\n\t    Histogram.prototype.sortByFreq = function sortByFreq() {\n\t        this.setState({ sortBy: \"freq\" });\n\t    };\n\t\n\t    Histogram.prototype.render = function render() {\n\t        var _this4 = this;\n\t\n\t        var sum = 0;\n\t        var d = this.props.counts;\n\t        var m = this.props.mapping;\n\t        var lis = [];\n\t        for (var i = 65; i <= 90; i++) {\n\t            var ch = String.fromCharCode(i);\n\t            var freq = d[String.fromCharCode(i)] || 0;\n\t            sum += freq;\n\t            lis.push({ ch: ch, freq: freq, s: m[ch] || \"\" });\n\t        }\n\t        var inputBoxStyle = {\n\t            width: \"25px\",\n\t            padding: \"0\",\n\t            margin: \"0\",\n\t            textAlign: \"center\"\n\t        };\n\t\n\t        if (this.state.sortBy === \"freq\") lis.sort(function (a, b) {\n\t            return parseInt(b.freq) - parseInt(a.freq);\n\t        });\n\t\n\t        var lip = lis.map(function (e, i) {\n\t            return _react2.default.createElement(\n\t                'li',\n\t                { style: { marginBottom: \"0pt\", display: \"flex\", alignItems: \"center\" }, key: i },\n\t                _react2.default.createElement('input', { style: inputBoxStyle, id: \"INPUT-\" + e.ch, value: e.s, onChange: _this4.props.controller.substituteChange.bind(_this4.props.controller, \"INPUT-\" + e.ch, e.ch) }),\n\t                _react2.default.createElement(CharHead, { ch: e.ch }),\n\t                _react2.default.createElement(BarBody, { freq: e.freq, sum: sum })\n\t            );\n\t        }, lis);\n\t\n\t        return _react2.default.createElement(\n\t            'div',\n\t            null,\n\t            'Sorted by: ',\n\t            _react2.default.createElement(\n\t                'button',\n\t                { onClick: this.sortByAlpha.bind(this) },\n\t                'Alphabet'\n\t            ),\n\t            _react2.default.createElement(\n\t                'button',\n\t                { onClick: this.sortByFreq.bind(this) },\n\t                'Frequency'\n\t            ),\n\t            _react2.default.createElement(\n\t                'ul',\n\t                { style: { listStyle: \"none\" } },\n\t                lip\n\t            ),\n\t            'sum = ',\n\t            sum\n\t        );\n\t    };\n\t\n\t    return Histogram;\n\t}(_react.Component);\n\t\n\tvar ToggleButton = function (_Component4) {\n\t    _inherits(ToggleButton, _Component4);\n\t\n\t    function ToggleButton() {\n\t        _classCallCheck(this, ToggleButton);\n\t\n\t        return _possibleConstructorReturn(this, _Component4.apply(this, arguments));\n\t    }\n\t\n\t    ToggleButton.prototype.render = function render() {\n\t        var e = this.props.e;\n\t        var ctl = this.props.controller;\n\t        var h = ctl.state.highlight;\n\t        var isOn = h[e.key];\n\t        var buttonStyle = {\n\t            backgroundColor: isOn === true ? \"gold\" : \"#DDD\"\n\t        };\n\t        return _react2.default.createElement(\n\t            'button',\n\t            { onClick: ctl.highlightKeyword.bind(ctl, e.key, isOn === true ? \"off\" : \"on\"), style: buttonStyle },\n\t            _react2.default.createElement(\n\t                'span',\n\t                { style: { fontFamily: \"monospace\" } },\n\t                e.key\n\t            ),\n\t            ' (',\n\t            e.value,\n\t            ')'\n\t        );\n\t    };\n\t\n\t    return ToggleButton;\n\t}(_react.Component);\n\t\n\t;\n\t\n\tvar CaesarCipher = function (_Component5) {\n\t    _inherits(CaesarCipher, _Component5);\n\t\n\t    function CaesarCipher() {\n\t        _classCallCheck(this, CaesarCipher);\n\t\n\t        var _this6 = _possibleConstructorReturn(this, _Component5.call(this));\n\t\n\t        _this6.state = {\n\t            mapping: {},\n\t            highlight: {},\n\t            paragraph: '\\n        Meltdown and Spectre exploit critical vulnerabilities in modern processors. These hardware vulnerabilities allow programs to steal data which is currently processed on the computer. While programs are typically not permitted to read data from other programs, a malicious program can exploit Meltdown and Spectre to get hold of secrets stored in the memory of other running programs. This might include your passwords stored in a password manager or browser, your personal photos, emails, instant messages and even business-critical documents.\\n        Meltdown and Spectre work on personal computers, mobile devices, and in the cloud. Depending on the cloud provider\\'s infrastructure, it might be possible to steal data from other customers.\\n        ' };\n\t\n\t        return _this6;\n\t    }\n\t\n\t    CaesarCipher.prototype.componentDidMount = function componentDidMount() {};\n\t\n\t    CaesarCipher.prototype.highlightKeyword = function highlightKeyword(keyword, mode) {\n\t        var p = JSON.parse(JSON.stringify(this.state.highlight));\n\t        if (mode === \"on\") {\n\t            p[keyword] = true;\n\t        } else {\n\t            p[keyword] = undefined;\n\t        }\n\t        this.setState(function (o) {\n\t            return {\n\t                mapping: o.mapping,\n\t                highlight: p,\n\t                paragraph: o.paragraph\n\t            };\n\t        });\n\t    };\n\t\n\t    CaesarCipher.prototype.substituteChange = function substituteChange(inputboxID, ch) {\n\t        var c = document.getElementById(inputboxID).value;\n\t        var m = JSON.parse(JSON.stringify(this.state.mapping));\n\t        if (c.length !== 1) c = undefined;\n\t        m[ch] = c;\n\t        this.setState(function (o) {\n\t            return {\n\t                mapping: m,\n\t                highlight: o.highlight,\n\t                paragraph: o.paragraph };\n\t        });\n\t        console.log(inputboxID, ch);\n\t    };\n\t\n\t    CaesarCipher.prototype.updateText = function updateText() {\n\t        var t = document.getElementById('par').value;\n\t        this.setState(function (o) {\n\t            return {\n\t                mapping: o.mapping,\n\t                highlight: o.highlight,\n\t                paragraph: t };\n\t        });\n\t    };\n\t\n\t    CaesarCipher.prototype.render = function render() {\n\t        var _this7 = this;\n\t\n\t        var mapping = this.state.mapping;\n\t        var counts = {};\n\t        var s = this.state.paragraph.toUpperCase();\n\t        s = s.replace(/[^A-Z]/g, '');\n\t        for (var i = 0; i < s.length; i++) {\n\t            var ch = s[i];\n\t            if (counts[ch] === undefined) counts[ch] = 1;else counts[ch] += 1;\n\t        }\n\t        var bigram = {},\n\t            bigramlist = [];\n\t        var trigram = {},\n\t            trigramlist = [];\n\t        for (var i = 0; i + 1 < s.length; i++) {\n\t            var st = s[i] + s[i + 1];\n\t            if (bigram[st] === undefined) bigram[st] = 1;else bigram[st] += 1;\n\t        }\n\t        for (var i = 0; i + 2 < s.length; i++) {\n\t            var st = s[i] + s[i + 1] + s[i + 2];\n\t            if (trigram[st] === undefined) trigram[st] = 1;else trigram[st] += 1;\n\t        }\n\t        for (var key in trigram) {\n\t            if (trigram[key] > 1) trigramlist.push({ key: key, value: trigram[key] });\n\t        }\n\t        for (var key in bigram) {\n\t            if (bigram[key] > 1) bigramlist.push({ key: key, value: bigram[key] });\n\t        }\n\t        bigramlist.sort(function (a, b) {\n\t            return b.value - a.value;\n\t        });\n\t        trigramlist.sort(function (a, b) {\n\t            return b.value - a.value;\n\t        });\n\t        console.log(bigramlist);\n\t        console.log(trigramlist);\n\t\n\t        var decodedText = [];\n\t        var markedText = {};\n\t        for (var kw in this.state.highlight) {\n\t            if (this.state.highlight[kw] === true) for (var i = 0; i <= s.length - kw.length; i++) {\n\t                var ok = true;\n\t                for (var j = 0; j < kw.length; j++) {\n\t                    if (s[i + j] !== kw[j]) ok = false;\n\t                }if (ok == true) for (var j = 0; j < kw.length; j++) {\n\t                    markedText[i + j] = 1;\n\t                }\n\t            }\n\t        }\n\t        for (var i = 0; i < s.length; i++) {\n\t            var ch = s[i];\n\t\n\t            var chStyle = { color: \"black\" };\n\t            var chDisplay = ch;\n\t            if (mapping[ch] !== undefined) {\n\t                chDisplay = mapping[ch];\n\t                chStyle['color'] = \"red\";\n\t            }\n\t            if (markedText[i] !== undefined) {\n\t                chStyle['backgroundColor'] = \"gold\";\n\t            }\n\t\n\t            decodedText.push(_react2.default.createElement(\n\t                'span',\n\t                { key: i, style: chStyle },\n\t                chDisplay\n\t            ));\n\t        }\n\t\n\t        console.log(counts);\n\t        var blist = bigramlist.map(function (e, i) {\n\t            return _react2.default.createElement(ToggleButton, { key: i, controller: _this7, e: e });\n\t        });\n\t        var tlist = trigramlist.map(function (e, i) {\n\t            return _react2.default.createElement(ToggleButton, { key: i, controller: _this7, e: e });\n\t        });\n\t        return _react2.default.createElement(\n\t            'div',\n\t            null,\n\t            _react2.default.createElement(\n\t                'h1',\n\t                null,\n\t                'Frequency Analysis & Substitution Ciphers'\n\t            ),\n\t            _react2.default.createElement(\n\t                'div',\n\t                { style: { display: \"flex\" } },\n\t                _react2.default.createElement(\n\t                    'div',\n\t                    { style: { flex: \"0 0 50%\" } },\n\t                    _react2.default.createElement('textarea', { id: 'par', rows: '15', style: { width: \"100%\" }, onChange: this.updateText.bind(this), value: this.state.paragraph }),\n\t                    _react2.default.createElement(\n\t                        'div',\n\t                        { id: 'res', style: { fontFamily: \"monospace\", lineHeight: \"1.1\", display: 'flex', flexWrap: 'wrap', fontSize: \"150%\" } },\n\t                        decodedText\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        'div',\n\t                        { id: 'kgrams' },\n\t                        blist,\n\t                        tlist\n\t                    )\n\t                ),\n\t                _react2.default.createElement(\n\t                    'div',\n\t                    { style: { flex: \"0 0 50%\" } },\n\t                    _react2.default.createElement(Histogram, { counts: counts, controller: this, mapping: mapping })\n\t                )\n\t            ),\n\t            _react2.default.createElement(\n\t                _gatsbyLink2.default,\n\t                { to: '/' },\n\t                'Go back to the homepage'\n\t            )\n\t        );\n\t    };\n\t\n\t    return CaesarCipher;\n\t}(_react.Component);\n\t\n\texports.default = CaesarCipher;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-frequency-analysis-js-31a15617ac773af1f48d.js","import React, { Component } from 'react'\nimport Link from 'gatsby-link'\n\nclass CharHead extends Component {\n    render() {\n        return (\n            <div style={{display: \"inline-block\", width: \"50px\", textAlign: \"center\"}}>{this.props.ch}</div>\n        )\n    }\n}\n\nclass BarBody extends Component {\n    render() {\n        var fw = this.props.freq / this.props.sum;\n        var fwidth = fw * 3000;\n        const wholeBoxStyle = {\n            width: \"100%\",\n            display: \"block\",\n            margin: \"0px\"\n        };\n        const innerBarStyle = {\n            borderTop: \"2px solid white\", \n            borderBottom: \"2px solid white\",\n            verticalAlign: \"middle\",\n            lineHeight: \"1.5\",\n            display: \"table\",\n            width: fwidth + \"px\",\n            maxWidth: fwidth + \"px\",\n            backgroundColor:\"darkblue\",\n            color:\"white\",\n            overflow: \"hidden\",\n            fontSize: \"50%\",\n            whiteSpace: \"nowrap\",\n            transition: \"all 0.5s\"\n        };\n        const innerTextStyle = {\n            display: \"table-cell\",\n            width: fwidth + \"px\",\n            maxWidth: fwidth + \"px\"\n        }\n        const outerBarStyle = {\n            position: \"absolute\",\n            width: \"100%\",\n            display: \"table\",\n            fontSize: \"50%\",\n            overflow: \"hidden\",\n            borderTop: \"2px solid white\", \n            borderBottom: \"2px solid white\",\n            lineHeight: \"1.5\",\n            zIndex: \"-5\"\n        };\n        return (\n            <div style={wholeBoxStyle}>\n            <div style={outerBarStyle}><div style={{display:\"table-cell\"}}>&nbsp;{(fw*100).toFixed(2)}%</div></div>\n            <div style={innerBarStyle}><div style={innerTextStyle}>&nbsp;{(fw*100).toFixed(2)}%</div>\n            </div>\n            </div>\n        )\n    }\n}\n\nclass Histogram extends Component {\n\n    constructor() {\n        super()\n        this.state = { sortBy: \"alpha\" }\n    }\n\n    sortByAlpha() {\n        this.setState({ sortBy: \"alpha\" })\n    }\n    sortByFreq() {\n        this.setState({ sortBy: \"freq\" })\n    }\n\n    render() {\n        var sum = 0;\n        const d = this.props.counts;\n        const m = this.props.mapping;\n        var lis = [];\n        for (var i = 65; i <= 90; i++) {\n            var ch = String.fromCharCode(i);\n            var freq = d[String.fromCharCode(i)] || 0;\n            sum += freq;\n            lis.push({ch: ch, freq: freq, s: (m[ch]||\"\")});\n        }\n        const inputBoxStyle = {\n            width: \"25px\",\n            padding: \"0\",\n            margin: \"0\",\n            textAlign:\"center\"\n        }\n        \n        if (this.state.sortBy === \"freq\") lis.sort((a, b) => (parseInt(b.freq) - parseInt(a.freq)));\n\n        var lip = lis.map((e,i)=>(<li style={{marginBottom: \"0pt\", display: \"flex\", alignItems:\"center\"}} key={i}><input style={inputBoxStyle} id={\"INPUT-\" + e.ch} value={e.s} onChange={this.props.controller.substituteChange.bind(this.props.controller, \"INPUT-\" + e.ch, e.ch)} /><CharHead ch={e.ch}></CharHead><BarBody freq={e.freq} sum={sum}></BarBody></li>), lis);\n        \n        return (\n            <div>\n                Sorted by: <button onClick={this.sortByAlpha.bind(this)}>Alphabet</button><button onClick={this.sortByFreq.bind(this)}>Frequency</button>\n                <ul style={{listStyle: \"none\"}}>\n                {lip}\n                </ul>\n                sum = {sum}\n            </div>\n        )\n    }\n}\n\nclass ToggleButton extends Component {\n    render() {\n        const e = this.props.e;\n        const ctl = this.props.controller;\n        const h = ctl.state.highlight;\n        const isOn = h[e.key];\n        var buttonStyle = {\n            backgroundColor: (isOn === true? \"gold\": \"#DDD\")\n        };\n        return (\n            <button onClick={ctl.highlightKeyword.bind(ctl, e.key, isOn===true? \"off\": \"on\")} style={buttonStyle} ><span style={{fontFamily: \"monospace\"}}>{e.key}</span> ({e.value})</button>\n        )\n    }\n};\n\nclass CaesarCipher extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            mapping: {},\n            highlight: {},\n            paragraph: `\n        Meltdown and Spectre exploit critical vulnerabilities in modern processors. These hardware vulnerabilities allow programs to steal data which is currently processed on the computer. While programs are typically not permitted to read data from other programs, a malicious program can exploit Meltdown and Spectre to get hold of secrets stored in the memory of other running programs. This might include your passwords stored in a password manager or browser, your personal photos, emails, instant messages and even business-critical documents.\n        Meltdown and Spectre work on personal computers, mobile devices, and in the cloud. Depending on the cloud provider's infrastructure, it might be possible to steal data from other customers.\n        ` };\n        \n    }\n    componentDidMount() {\n        \n    }\n    highlightKeyword(keyword, mode) {\n        var p = JSON.parse(JSON.stringify(this.state.highlight));\n        if (mode === \"on\") {\n            p[keyword] = true;\n        } else {\n            p[keyword] = undefined;\n        }\n        this.setState((o) => {\n            return {\n                mapping: o.mapping,\n                highlight: p,\n                paragraph: o.paragraph\n            }\n        })\n    }\n    substituteChange(inputboxID, ch) {\n        var c = document.getElementById(inputboxID).value;\n        var m = JSON.parse(JSON.stringify(this.state.mapping));\n        if (c.length !== 1) c = undefined;\n        m[ch] = c;\n        this.setState((o) => { return {\n            mapping: m,\n            highlight: o.highlight, \n            paragraph: o.paragraph }})\n        console.log(inputboxID, ch);\n    }\n    updateText() {\n        var t = document.getElementById('par').value;\n        this.setState((o) => { return {\n            mapping: o.mapping,\n            highlight: o.highlight,\n            paragraph: t }; });\n    }\n    render() {\n        const mapping = this.state.mapping;\n        var counts = {};\n        var s = this.state.paragraph.toUpperCase();\n        s = s.replace(/[^A-Z]/g, '');\n        for (var i = 0; i < s.length; i++) {\n            var ch = s[i];\n            if (counts[ch] === undefined) counts[ch] = 1;\n            else counts[ch] += 1;\n        }\n        var bigram = {}, bigramlist = [];\n        var trigram = {}, trigramlist = [];\n        for (var i = 0; i+1 < s.length; i++) {\n            var st = s[i] + s[i+1];\n            if (bigram[st] === undefined) bigram[st] = 1;\n            else bigram[st] += 1;\n        }\n        for (var i = 0; i+2 < s.length; i++) {\n            var st = s[i] + s[i+1] + s[i+2];\n            if (trigram[st] === undefined) trigram[st] = 1;\n            else trigram[st] += 1;\n        }\n        for (var key in trigram) {\n            if (trigram[key] > 1)\n                trigramlist.push({ key: key, value: trigram[key] });\n        }\n        for (var key in bigram) {\n            if (bigram[key] > 1) \n                bigramlist.push({ key: key, value: bigram[key] });\n        }\n        bigramlist.sort((a, b) => (b.value - a.value));\n        trigramlist.sort((a, b) => (b.value - a.value));\n        console.log(bigramlist);\n        console.log(trigramlist);\n\n        var decodedText = [];\n        var markedText = {};\n        for (var kw in this.state.highlight) {\n            if (this.state.highlight[kw] === true)\n            for (var i = 0; i <= s.length - kw.length; i++) {\n                var ok = true;\n                for (var j = 0; j < kw.length; j++) if(s[i+j] !== kw[j]) ok=false;\n                if (ok == true) for(var j=0;j<kw.length; j++) markedText[ (i+j) ] = 1;\n            }\n        }\n        for (var i = 0; i < s.length; i++) {\n            var ch = s[i];\n            \n            var chStyle = { color: \"black\" };\n            var chDisplay = ch;\n            if (mapping[ch] !== undefined) {\n                chDisplay = mapping[ch];\n                chStyle['color'] = \"red\";\n            }\n            if (markedText[i] !== undefined) {\n                chStyle['backgroundColor'] = \"gold\";\n            }\n            \n\n            \n            decodedText.push((<span key={i} style={chStyle}>{chDisplay}</span>));\n            \n        }\n        \n        console.log(counts);\n        const blist = bigramlist.map((e,i) => (<ToggleButton key={i} controller={this} e={e}/>))\n        const tlist = trigramlist.map((e,i) => (<ToggleButton key={i} controller={this} e={e}/>))\n    return (\n        <div>\n        <h1>Frequency Analysis & Substitution Ciphers</h1>\n        <div style={{display: \"flex\"}}>\n        <div style={{flex: \"0 0 50%\"}}>\n            <textarea id='par' rows=\"15\" style={{width:\"100%\"}} onChange={this.updateText.bind(this)} value={ this.state.paragraph }></textarea>\n            <div id='res' style={{fontFamily: \"monospace\", lineHeight: \"1.1\", display: 'flex', flexWrap: 'wrap', fontSize: \"150%\"}}>\n            {decodedText}\n            </div>\n            <div id='kgrams'>\n            {blist}\n            {tlist}\n            </div>\n        </div>\n        <div style={{flex: \"0 0 50%\"}}>\n        <Histogram counts={counts} controller={this} mapping={mapping}></Histogram>\n        </div>\n        </div>\n        <Link to=\"/\">Go back to the homepage</Link>\n        </div>\n    )\n    }\n}\nexport default CaesarCipher\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/frequency-analysis.js"],"sourceRoot":""}